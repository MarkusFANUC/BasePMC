!!:--------------------------------------------------------------------------:
!!: File              : op_30keys.def                                        :
!!: Creation date     : 20.09.2013                                           :
!!: Last modification : see table below                                      :
!!: Author            : FANUC FA Switzerland / Peter Bloesch                 :
!!: Description       : Definition of inputs/outputs for small operator's    :
!!:                     Panel                                                :
!!:--------------------------------------------------------------------------:
!!
!!:--------------------------------------------------------------------------:
!!:                     Modification                                         :
!!:--------------------------------------------------------------------------:
!!: Date   :Version: Sign  :Description                                      :
!!:--------------------------------------------------------------------------:
!!:19.10.16: 2.0.0 :Blp    :I/O assignment changed Y6->Y0                    :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
#ifndef op_small_30_def
#define op_small_30_def

!! ===========================================================================
!! Definitions
!! ===========================================================================

#if start_address_op  == 0
!! ---------------------------------------------------------------------------
!! program protection
!! ---------------------------------------------------------------------------
   #set __KEY_PROTECT = E9904.6 #set __LED_KEY_PROTECT = E9920.6 !! ---------------------------------------------------------------------------
!! emergency stop and reset
!! ---------------------------------------------------------------------------
   #set __KEY_RST = E9905.6 #set __LED_KEY_RST = E9921.6 #set __KEY_EMGSTOP = E9906.6 #set __LED_KEY_EMGSTOP = E9922.6 !! ---------------------------------------------------------------------------
!! activation of software operator's panel for remote diagnosis
!! ---------------------------------------------------------------------------
   #set __KEY_SOPACT = E9907.6 !! SOP
   #set __LED_SOPACT = E9923.6 !! ---------------------------------------------------------------------------
!! operating modes
!! ---------------------------------------------------------------------------
   #set __KEY_MODE_MEM = E9904.0 !! auto
   #set __LED_MODE_MEM = E9920.0 #set __KEY_MODE_EDIT = E9904.1 !! edit
   #set __LED_MODE_EDIT = E9920.1 #set __KEY_MODE_MDI = E9904.2 !! mdi
   #set __LED_MODE_MDI = E9920.2 #set __KEY_DNC_MODE = E9904.3 !! remote
   #set __LED_DNC_MODE = E9920.3 #set __KEY_MODE_REF = E9904.4 !! ref return
   #set __LED_MODE_REF = E9920.4 #set __KEY_MODE_JOG = E9904.5 !! jog
   #set __LED_MODE_JOG = E9920.5 #set __KEY_MODE_INC = E9905.0 !! jog inc
   #set __LED_MODE_INC = E9921.0 #set __KEY_MODE_HANDLE = E9905.1 !! handle
   #set __LED_MODE_HANDLE = E9921.1 #set __KEY_MODE_TEACH = E9905.2 !! teach
   #set __LED_MODE_TEACH = E9921.2 #set __KEY_SINGLE_BLOCK = E9906.0 !! single block
   #set __LED_SINGLE_BLOCK = E9922.0 #set __KEY_BLOCK_SKIP = E9906.1 !! block delete
   #set __LED_BLOCK_SKIP = E9922.1 #set __KEY_OPT_STOP = E9906.2 !! opt stop
   #set __LED_OPT_STOP = E9922.2 #set __KEY_PGM_REST = E9907.0 !! program restart
   #set __LED_PGM_REST = E9923.0 #set __KEY_PGM_TEST = E9907.1 !! mc lock
   #set __LED_PGM_TEST = E9923.1 #set __KEY_DRY_RUN = E9907.2 !! dry run
   #set __LED_DRY_RUN = E9923.2 !! ---------------------------------------------------------------------------
!! nc control
!! ---------------------------------------------------------------------------
   #set __KEY_CYCLE_STOP = E9908.0 !! cycle stop
   #set __LED_CYCLE_STOP = E9924.0 #set __KEY_CYCLE_START = E9908.1 !! cycle start
   #set __LED_CYCLE_START = E9924.1 #set __KEY_PGM_STOP = E9908.2 !! program stop 
   #set __LED_PGM_STOP = E9924.2 !! program stop 

!! ---------------------------------------------------------------------------
!! axes
!! ---------------------------------------------------------------------------
   #define  __FEED_OVR_ADDR            E9900       !! inputs feed override switch (byte)

!! -----------------------------------------------
!! axis direction keys for m-type control
!! -----------------------------------------------
   #if control_type == 0                           !! m-type control
      #set __KEY_3RD_AXIS_PLUS = E9905.3 !! +Z
      #set __LED_3RD_AXIS_PLUS = E9921.3 #set __KEY_2ND_AXIS_PLUS = E9905.4 !! +Y
      #set __LED_2ND_AXIS_PLUS = E9921.4 #set __KEY_4TH_AXIS_MINUS = E9905.5 !! -4
      #set __LED_4TH_AXIS_MINUS = E9921.5 #set __KEY_1ST_AXIS_PLUS = E9906.3 !! +X
      #set __LED_1ST_AXIS_PLUS = E9922.3 #set __KEY_RAPID_TRAVERSE = E9906.4 !! trvrs
      #set __LED_RAPID_TRAVERSE = E9922.4 #set __KEY_1ST_AXIS_MINUS = E9906.5 !! -X
      #set __LED_1ST_AXIS_MINUS = E9922.5 #set __KEY_4TH_AXIS_PLUS = E9907.3 !! +4
      #set __LED_4TH_AXIS_PLUS = E9923.3 #set __KEY_2ND_AXIS_MINUS = E9907.4 !! -Y
      #set __LED_2ND_AXIS_MINUS = E9923.4 #set __KEY_3RD_AXIS_MINUS = E9907.5 !! -Z
      #set __LED_3RD_AXIS_MINUS = E9923.5 #else
!! -----------------------------------------------
!! axis direction keys for t-type control
!! -----------------------------------------------
      #set __KEY_3RD_AXIS_PLUS = E9905.3 !! +3
      #set __LED_3RD_AXIS_PLUS = E9921.3 #set __KEY_1ST_AXIS_MINUS = E9905.4 !! -X
      #set __LED_1ST_AXIS_MINUS = E9921.4 #set __KEY_4TH_AXIS_MINUS = E9905.5 !! -4
      #set __LED_4TH_AXIS_MINUS = E9921.5 #set __KEY_2ND_AXIS_MINUS = E9906.3 !! -Z
      #set __LED_2ND_AXIS_MINUS = E9922.3 #set __KEY_RAPID_TRAVERSE = E9906.4 !! trvrs
      #set __LED_RAPID_TRAVERSE = E9922.4 #set __KEY_2ND_AXIS_PLUS = E9906.5 !! +Z
      #set __LED_2ND_AXIS_PLUS = E9922.5 #set __KEY_4TH_AXIS_PLUS = E9907.3 !! +4
      #set __LED_4TH_AXIS_PLUS = E9923.3 #set __KEY_1ST_AXIS_PLUS = E9907.4 !! +X
      #set __LED_1ST_AXIS_PLUS = E9923.4 #set __KEY_3RD_AXIS_MINUS = E9907.5 !! -3
      #set __LED_3RD_AXIS_MINUS = E9923.5 #endif

!! ---------------------------------------------------------------------------
!! spindle
!! ---------------------------------------------------------------------------
   #if spindle_support_P01 > -1
      #set __KEY_SPINDLE_CW = E9908.3 !! spdl cw
      #set __LED_SPINDLE_CW = E9924.3 #set __KEY_SPINDLE_STOP = E9908.4 !! spdl stop
      #set __LED_SPINDLE_STOP = E9924.4 #set __KEY_SPINDLE_CCW = E9908.5 !! spdl ccw
      #set __LED_SPINDEL_CCW = E9924.5 #if spindle_override == 1  !! spindle override with gray coded selector
         #set __I_SPI_OVR_BIT0 = E9901.0 !! spindle override switch bit 0
         #set __I_SPI_OVR_BIT1 = E9901.1 !! spindle override switch bit 1
         #set __I_SPI_OVR_BIT2 = E9901.2 !! spindle override switch bit 2
      #endif
   #endif
#endif

#if start_address_op  == 1
!! ---------------------------------------------------------------------------
!! program protection
!! ---------------------------------------------------------------------------
   #set __KEY_PROTECT = X0101.4 !! ---------------------------------------------------------------------------
!! activation of software operator's panel for remote diagnosis
!! ---------------------------------------------------------------------------
   #set __KEY_SOPACT = E9907.6 !! SOP
   #set __LED_SOPACT = E9923.6 !! ---------------------------------------------------------------------------
!! operating modes
!! ---------------------------------------------------------------------------
   #set __KEY_MODE_MEM = X0104.0 !! auto
   #set __LED_MODE_MEM = Y0100.0 #set __KEY_MODE_EDIT = X0104.1 !! edit
   #set __LED_MODE_EDIT = Y0100.1 #set __KEY_MODE_MDI = X0104.2 !! mdi
   #set __LED_MODE_MDI = Y0100.2 #set __KEY_DNC_MODE = X0104.3 !! remote
   #set __LED_DNC_MODE = Y0100.3 #set __KEY_MODE_REF = X0104.4 !! ref return
   #set __LED_MODE_REF = Y0100.4 #set __KEY_MODE_JOG = X0104.5 !! jog
   #set __LED_MODE_JOG = Y0100.5 #set __KEY_MODE_INC = X0105.0 !! jog inc
   #set __LED_MODE_INC = Y0101.0 #set __KEY_MODE_HANDLE = X0105.1 !! handle
   #set __LED_MODE_HANDLE = Y0101.1 #set __KEY_MODE_TEACH = X0105.2 !! teach
   #set __LED_MODE_TEACH = Y0101.2 #set __KEY_SINGLE_BLOCK = X0106.0 !! singl block
   #set __LED_SINGLE_BLOCK = Y0102.0 #set __KEY_BLOCK_SKIP = X0106.1 !! block delete
   #set __LED_BLOCK_SKIP = Y0102.1 #set __KEY_OPT_STOP = X0106.2 !! opt stop
   #set __LED_OPT_STOP = Y0102.2 #set __KEY_PGM_REST = X0107.0 !! program restart
   #set __LED_PGM_REST = Y0103.0 #set __KEY_PGM_TEST = X0107.1 !! mc lock
   #set __LED_PGM_TEST = Y0103.1 #set __KEY_DRY_RUN = X0107.2 !! dry run
   #set __LED_DRY_RUN = Y0103.2 !! ---------------------------------------------------------------------------
!! nc control
!! ---------------------------------------------------------------------------
   #set __KEY_CYCLE_STOP = X0108.0 !! cycle stop
   #set __LED_CYCLE_STOP = Y0104.0 #set __KEY_CYCLE_START = X0108.1 !! cycle start
   #set __LED_CYCLE_START = Y0104.1 #set __KEY_PGM_STOP = X0108.2 !! program stop 
   #set __LED_PGM_STOP = Y0104.2 !! program stop 

!! ---------------------------------------------------------------------------
!! axes
!! ---------------------------------------------------------------------------
   #define  __FEED_OVR_ADDR            X0100       !! inputs feed override switch (byte)

!! -----------------------------------------------
!! axis direction keys for m-type control
!! -----------------------------------------------
   #if control_type == 0                           !! m-type control
      #set __KEY_3RD_AXIS_PLUS = X0105.3 !! +Z
      #set __KEY_2ND_AXIS_PLUS = X0105.4 !! +Y
      #set __KEY_4TH_AXIS_MINUS = X0105.5 !! -4
      #set __KEY_1ST_AXIS_PLUS = X0106.3 !! +X
      #set __KEY_RAPID_TRAVERSE = X0106.4 !! trvrs
      #set __KEY_1ST_AXIS_MINUS = X0106.5 !! -X
      #set __KEY_4TH_AXIS_PLUS = X0107.3 !! +4
      #set __KEY_2ND_AXIS_MINUS = X0107.4 !! -Y
      #set __KEY_3RD_AXIS_MINUS = X0107.5 !! -Z
   #else
!! -----------------------------------------------
!! axis direction keys for t-type control
!! -----------------------------------------------
      #set __KEY_3RD_AXIS_PLUS = X0105.3 !! +3
      #set __KEY_1ST_AXIS_MINUS = X0105.4 !! -X
      #set __KEY_4TH_AXIS_MINUS = X0105.5 !! -4
      #set __KEY_2ND_AXIS_MINUS = X0106.3 !! -Z
      #set __KEY_RAPID_TRAVERSE = X0106.4 !! trvrs
      #set __KEY_2ND_AXIS_PLUS = X0106.5 !! +Z
      #set __KEY_4TH_AXIS_PLUS = X0107.3 !! +4
      #set __KEY_1ST_AXIS_PLUS = X0107.4 !! +X
      #set __KEY_3RD_AXIS_MINUS = X0107.5 !! -3
   #endif

!! ---------------------------------------------------------------------------
!! spindle
!! ---------------------------------------------------------------------------
   #if spindle_support_P01 > -1
      #set __KEY_SPINDLE_CW = X0108.3 !! spdl cw
      #set __LED_SPINDLE_CW = Y0104.3 #set __KEY_SPINDLE_STOP = X0108.4 !! spdl stop
      #set __LED_SPINDLE_STOP = Y0104.4 #set __KEY_SPINDLE_CCW = X0108.5 !! spdl ccw
      #set __LED_SPINDEL_CCW = Y0104.5 #if spindle_override == 1  !! Spindle override with gray coded selector
         #set __I_SPI_OVR_BIT0 = X0101.0 !! spindle override switch bit 0
         #set __I_SPI_OVR_BIT1 = X0101.1 !! spindle override switch bit 1
         #set __I_SPI_OVR_BIT2 = X0101.2 !! spindle override switch bit 2
      #endif
   #endif
#endif


#if start_address_op  == 2
!! ---------------------------------------------------------------------------
!! program protection
!! ---------------------------------------------------------------------------
   #set __KEY_PROTECT = X0007.4 !! ---------------------------------------------------------------------------
!! activation of software operator's panel for remote diagnosis
!! ---------------------------------------------------------------------------
   #set __KEY_SOPACT = E9907.6 !! SOP
   #set __LED_SOPACT = E9923.6 !! ---------------------------------------------------------------------------
!! Operating modes
!! ---------------------------------------------------------------------------
   #set __KEY_MODE_MEM = X0010.0 !! auto
   #set __LED_MODE_MEM = Y0000.0 #set __KEY_MODE_EDIT = X0010.1 !! edit
   #set __LED_MODE_EDIT = Y0000.1 #set __KEY_MODE_MDI = X0010.2 !! mdi
   #set __LED_MODE_MDI = Y0000.2 #set __KEY_DNC_MODE = X0010.3 !! remote
   #set __LED_DNC_MODE = Y0000.3 #set __KEY_MODE_REF = X0010.4 !! ref return
   #set __LED_MODE_REF = Y0000.4 #set __KEY_MODE_JOG = X0010.5 !! jog
   #set __LED_MODE_JOG = Y0000.5 #set __KEY_MODE_INC = X0011.0 !! jog inc
   #set __LED_MODE_INC = Y0001.0 #set __KEY_MODE_HANDLE = X0011.1 !! handle
   #set __LED_MODE_HANDLE = Y0001.1 #set __KEY_MODE_TEACH = X0011.2 !! teach
   #set __LED_MODE_TEACH = Y0001.2 #set __KEY_SINGLE_BLOCK = X0012.0 !! single block
   #set __LED_SINGLE_BLOCK = Y0002.0 #set __KEY_BLOCK_SKIP = X0012.1 !! block delete
   #set __LED_BLOCK_SKIP = Y0002.1 #set __KEY_OPT_STOP = X0012.2 !! opt stop
   #set __LED_OPT_STOP = Y0002.2 #set __KEY_PGM_REST = X0013.0 !! program restart
   #set __LED_PGM_REST = Y0003.0 #set __KEY_PGM_TEST = X0013.1 !! mc lock
   #set __LED_PGM_TEST = Y0003.1 #set __KEY_DRY_RUN = X0013.2 !! dry run
   #set __LED_DRY_RUN = Y0003.2 !! ---------------------------------------------------------------------------
!! nc control
!! ---------------------------------------------------------------------------
   #set __KEY_CYCLE_STOP = X0014.0 !! cycle stop
   #set __LED_CYCLE_STOP = Y0004.0 #set __KEY_CYCLE_START = X0014.1 !! cycle start
   #set __LED_CYCLE_START = Y0004.1 #set __KEY_PGM_STOP = X0014.2 !! program stop 
   #set __LED_PGM_STOP = Y0004.2 !! program stop 

!! ---------------------------------------------------------------------------
!! axes
!! ---------------------------------------------------------------------------
   #define  __FEED_OVR_ADDR            X0006       !! inputs feed override switch (byte)

!! -----------------------------------------------
!! axis direction keys for m-type control
!! -----------------------------------------------
   #if control_type == 0                           !! m-type control
      #set __KEY_3RD_AXIS_PLUS = X0011.3 !! +Z
      #set __KEY_2ND_AXIS_PLUS = X0011.4 !! +Y
      #set __KEY_4TH_AXIS_MINUS = X0011.5 !! -4
      #set __KEY_1ST_AXIS_PLUS = X0012.3 !! +X
      #set __KEY_RAPID_TRAVERSE = X0012.4 !! trvrs
      #set __KEY_1ST_AXIS_MINUS = X0012.5 !! -X
      #set __KEY_4TH_AXIS_PLUS = X0013.3 !! +4
      #set __KEY_2ND_AXIS_MINUS = X0013.4 !! -Y
      #set __KEY_3RD_AXIS_MINUS = X0013.5 !! -Z
   #else
!! -----------------------------------------------
!! axis direction keys for t-type control
!! -----------------------------------------------
      #set __KEY_3RD_AXIS_PLUS = X0011.3 !! +3
      #set __KEY_1ST_AXIS_MINUS = X0011.4 !! -X
      #set __KEY_4TH_AXIS_MINUS = X0011.5 !! -4
      #set __KEY_2ND_AXIS_MINUS = X0012.3 !! -Z
      #set __KEY_RAPID_TRAVERSE = X0012.4 !! trvrs
      #set __KEY_2ND_AXIS_PLUS = X0012.5 !! +Z
      #set __KEY_4TH_AXIS_PLUS = X0013.3 !! +4
      #set __KEY_1ST_AXIS_PLUS = X0013.4 !! +X
      #set __KEY_3RD_AXIS_MINUS = X0013.5 !! -3
   #endif

!! ---------------------------------------------------------------------------
!! spindle
!! ---------------------------------------------------------------------------
   #if spindle_support_P01 > -1
      #set __KEY_SPINDLE_CW = X0014.3 !! spdl cw
      #set __LED_SPINDLE_CW = Y0004.3 #set __KEY_SPINDLE_STOP = X0014.4 !! spdl stop
      #set __LED_SPINDLE_STOP = Y0004.4 #set __KEY_SPINDLE_CCW = X0014.5 !! spdl ccw
      #set __LED_SPINDEL_CCW = Y0004.5 #if spindle_override == 1  !! spindle override with gray coded selector
         #set __I_SPI_OVR_BIT0 = X0007.0 !! spindle override switch bit 0
         #set __I_SPI_OVR_BIT1 = X0007.1 !! spindle override switch bit 1
         #set __I_SPI_OVR_BIT2 = X0007.2 !! spindle override switch bit 2
      #endif
   #endif
#endif

#endif   !! op_small_30_def
