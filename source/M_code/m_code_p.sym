//:--------------------------------------------------------------------------:
//: File              : m_code__PATH__.sym                                       :
//: Creation date     : 09.12.2013                                           :
//: Last modification : see table below                                      :
//: Author            : FANUC FA Switzerland / Peter Bloesch                 :
//: Description       : Symbols for the path specific M code decoding        :
//:--------------------------------------------------------------------------:
//
//:--------------------------------------------------------------------------:
//:                     Modification                                         :
//:--------------------------------------------------------------------------:
//: Date   :Version: Sign  :Description                                      :
//:--------------------------------------------------------------------------:
//:19.10.17: 2.0.0 :Blp    :Symbols for 4th and 5th M-Code added             :
//:--------------------------------------------------------------------------:
//:        :       :       :                                                 :
//:--------------------------------------------------------------------------:
//:        :       :       :                                                 :
//:--------------------------------------------------------------------------:
//:        :       :       :                                                 :
//:--------------------------------------------------------------------------:

// ===========================================================================
// Data Table
// ===========================================================================
// -------------------------------------------------------
// global variables 
// -------------------------------------------------------
// -----------------------------------
// byte:
// -----------------------------------

// -----------------------------------
// bool:
// -----------------------------------

// -------------------------------------------------------
// local variables 
// -------------------------------------------------------
// -----------------------------------
// byte:
// -----------------------------------
mctabl__PATH__,D__ADDR__068,_PATH__:tab length for m code dec,
ptr1mc__PATH__,D__ADDR__069,_PATH__:index ptr to 1st m code,
dbit1m__PATH__,D__ADDR__070,_PATH__:dec. bit 1st m code table,
#if m_code_support == 1 || m_code_support == 2
ptr2mc__PATH__,D__ADDR__071,_PATH__:index ptr to 2nd m code,
dbit2m__PATH__,D__ADDR__072,_PATH__:dec. bit 2nd m code table,
ptr3mc__PATH__,D__ADDR__073,_PATH__:index ptr to 3rd m code,
dbit3m__PATH__,D__ADDR__074,_PATH__:dec. bit 3rd m code table,
#endif
#if m_code_support == 2
ptr4mc__PATH__,D__ADDR__080,_PATH__:index ptr to 4th m-code,
dbit4m__PATH__,D__ADDR__081,_PATH__:dec. bit 4th m-code table,
ptr5mc__PATH__,D__ADDR__082,_PATH__:index ptr to 5th m-code,
dbit5m__PATH__,D__ADDR__083,_PATH__:dec. bit 5th m-code table,
#endif

// -----------------------------------
// bool
// -----------------------------------

// ===========================================================================
// Internal Relay
// ===========================================================================
// -------------------------------------------------------
// global variables Rx100.0 - Rx153.7
// -------------------------------------------------------
// -----------------------------------
// byte
// -----------------------------------
M000_007__PATH__,R__ADDR__100,_PATH__:m codes M000 to M007,

// -----------------------------------
// bool
// -----------------------------------
M000__PATH__,R__ADDR__100.0,_PATH__:stop program run,
M001__PATH__,R__ADDR__100.1,_PATH__:optional stop,
M002__PATH__,R__ADDR__100.2,_PATH__:end of program,
#if spindle_support__PATH__ > 0 && spindle_support_P01 > -1
M003__PATH__,R__ADDR__100.3,_PATH__:spindle start cw,
M004__PATH__,R__ADDR__100.4,_PATH__:spindle start ccw,
M005__PATH__,R__ADDR__100.5,_PATH__:spindle stop,
#else
M003__PATH__,R__ADDR__100.3,,
M004__PATH__,R__ADDR__100.4,,
M005__PATH__,R__ADDR__100.5,,
#endif
M006__PATH__,R__ADDR__100.6,_PATH__:tool change,
M007__PATH__,R__ADDR__100.7,,

#if coolant_support__PATH__ > 0 && coolant_support_P01 > -1
M008__PATH__,R__ADDR__101.0,_PATH__:coolant on,
M009__PATH__,R__ADDR__101.1,_PATH__:coolant off,
#else
M008__PATH__,R__ADDR__101.0,,
M009__PATH__,R__ADDR__101.1,,
#endif
M010__PATH__,R__ADDR__101.2,,
M011__PATH__,R__ADDR__101.3,,
M012__PATH__,R__ADDR__101.4,,
#if spindle_support__PATH__ > 0 && coolant_support__PATH__ > 0 && spindle_support_P01 > -1 && coolant_support_P01 > -1
M013__PATH__,R__ADDR__101.5,_PATH__:sp start cw coolant on,
M014__PATH__,R__ADDR__101.6,_PATH__:sp start ccw coolant on,
#else
M013__PATH__,R__ADDR__101.5,,
M014__PATH__,R__ADDR__101.6,,
#endif
M015__PATH__,R__ADDR__101.7,,

M016__PATH__,R__ADDR__102.0,,
M017__PATH__,R__ADDR__102.1,,
M018__PATH__,R__ADDR__102.2,,
#if spindle_support__PATH__ > 0 && spindle_orientation__PATH__ > 0 && spindle_support_P01 > -1
M019__PATH__,R__ADDR__102.3,_PATH__:spindle orientation,
#else
M019__PATH__,R__ADDR__102.3,,
#endif
M020__PATH__,R__ADDR__102.4,,
M021__PATH__,R__ADDR__102.5,,
M022__PATH__,R__ADDR__102.6,,
M023__PATH__,R__ADDR__102.7,,

M024__PATH__,R__ADDR__103.0,,
M025__PATH__,R__ADDR__103.1,,
M026__PATH__,R__ADDR__103.2,,
#if spindle_support__PATH__ == 1 && cs_contour_ctrl__PATH__ > 0 && spindle_support_P01 > -1
M027__PATH__,R__ADDR__103.3,_PATH__:Cs contour ctrl on,
M028__PATH__,R__ADDR__103.4,_PATH__:Cs contour ctrl off,
#else
M027__PATH__,R__ADDR__103.3,,
M028__PATH__,R__ADDR__103.4,,
#endif
#if spindle_support__PATH__ > 0 && rigid_tapping__PATH__ > 0 && spindle_support_P01 > -1
M029__PATH__,R__ADDR__103.5,_PATH__:rigid tapping,
#else
M029__PATH__,R__ADDR__103.5,,
#endif
M030__PATH__,R__ADDR__103.6,_PATH__:end of program,
M031__PATH__,R__ADDR__103.7,,

M032__PATH__,R__ADDR__104.0,,
M033__PATH__,R__ADDR__104.1,,
M034__PATH__,R__ADDR__104.2,,
M035__PATH__,R__ADDR__104.3,,
M036__PATH__,R__ADDR__104.4,,
M037__PATH__,R__ADDR__104.5,,
M038__PATH__,R__ADDR__104.6,,
M039__PATH__,R__ADDR__104.7,,

M040__PATH__,R__ADDR__105.0,,
M041__PATH__,R__ADDR__105.1,,
M042__PATH__,R__ADDR__105.2,,
M043__PATH__,R__ADDR__105.3,,
M044__PATH__,R__ADDR__105.4,,
M045__PATH__,R__ADDR__105.5,,
M046__PATH__,R__ADDR__105.6,,
M047__PATH__,R__ADDR__105.7,,

M048__PATH__,R__ADDR__106.0,,
M049__PATH__,R__ADDR__106.1,,
M050__PATH__,R__ADDR__106.2,,
M051__PATH__,R__ADDR__106.3,,
M052__PATH__,R__ADDR__106.4,,
M053__PATH__,R__ADDR__106.5,,
M054__PATH__,R__ADDR__106.6,,
M055__PATH__,R__ADDR__106.7,,

M056__PATH__,R__ADDR__107.0,,
M057__PATH__,R__ADDR__107.1,,
M058__PATH__,R__ADDR__107.2,,
M059__PATH__,R__ADDR__107.3,,
M060__PATH__,R__ADDR__107.4,,
M061__PATH__,R__ADDR__107.5,,
M062__PATH__,R__ADDR__107.6,,
M063__PATH__,R__ADDR__107.7,,

M064__PATH__,R__ADDR__108.0,,
M065__PATH__,R__ADDR__108.1,,
M066__PATH__,R__ADDR__108.2,,
M067__PATH__,R__ADDR__108.3,,
M068__PATH__,R__ADDR__108.4,,
M069__PATH__,R__ADDR__108.5,,
M070__PATH__,R__ADDR__108.6,,
M071__PATH__,R__ADDR__108.7,,

M072__PATH__,R__ADDR__109.0,,
M073__PATH__,R__ADDR__109.1,,
M074__PATH__,R__ADDR__109.2,,
M075__PATH__,R__ADDR__109.3,,
M076__PATH__,R__ADDR__109.4,,
M077__PATH__,R__ADDR__109.5,,
M078__PATH__,R__ADDR__109.6,,
M079__PATH__,R__ADDR__109.7,,

M080__PATH__,R__ADDR__110.0,,
M081__PATH__,R__ADDR__110.1,,
M082__PATH__,R__ADDR__110.2,,
M083__PATH__,R__ADDR__110.3,,
M084__PATH__,R__ADDR__110.4,,
M085__PATH__,R__ADDR__110.5,,
M086__PATH__,R__ADDR__110.6,,
M087__PATH__,R__ADDR__110.7,,

M088__PATH__,R__ADDR__111.0,,
M089__PATH__,R__ADDR__111.1,,
M090__PATH__,R__ADDR__111.2,,
M091__PATH__,R__ADDR__111.3,,
M092__PATH__,R__ADDR__111.4,,
M093__PATH__,R__ADDR__111.5,,
M094__PATH__,R__ADDR__111.6,,
M095__PATH__,R__ADDR__111.7,,

M096__PATH__,R__ADDR__112.0,,
M097__PATH__,R__ADDR__112.1,,
M100__PATH__,R__ADDR__112.4,_PATH__:wp coord preset all axes,
M101__PATH__,R__ADDR__112.5,_PATH__:wp coord preset 1st axis,
#if axis_number__PATH__ > 1
M102__PATH__,R__ADDR__112.6,_PATH__:wp coord preset 2nd axis,
#endif
#if axis_number__PATH__ > 2
M103__PATH__,R__ADDR__112.7,_PATH__:wp coord preset 3rd axis,
#endif
#if axis_number__PATH__ > 3
M104__PATH__,R__ADDR__113.0,_PATH__:wp coord preset 4th axis,
#endif
#if axis_number__PATH__ > 4
M105__PATH__,R__ADDR__113.1,_PATH__:wp coord preset 5th axis,
#endif
#if axis_number__PATH__ > 5
M106__PATH__,R__ADDR__113.2,_PATH__:wp coord preset 6th axis,
#endif
#if axis_number__PATH__ > 6
M107__PATH__,R__ADDR__113.3,_PATH__:wp coord preset 7th axis,
#endif
#if axis_number__PATH__ > 7
M108__PATH__,R__ADDR__113.4,_PATH__:wp coord preset 8th axis,
#endif

M112__PATH__,R__ADDR__114.0,,
M120__PATH__,R__ADDR__115.0,,
M128__PATH__,R__ADDR__116.0,,
M136__PATH__,R__ADDR__117.0,,
M144__PATH__,R__ADDR__118.0,,
M152__PATH__,R__ADDR__119.0,,
M160__PATH__,R__ADDR__120.0,,
M168__PATH__,R__ADDR__121.0,,
M176__PATH__,R__ADDR__122.0,,
M184__PATH__,R__ADDR__123.0,,
M192__PATH__,R__ADDR__124.0,,
M198__PATH__,R__ADDR__124.6,external subprogram call,
M200__PATH__,R__ADDR__125.0,,
M208__PATH__,R__ADDR__126.0,,
M216__PATH__,R__ADDR__127.0,,
M224__PATH__,R__ADDR__128.0,,
M232__PATH__,R__ADDR__129.0,,
M240__PATH__,R__ADDR__130.0,,
M248__PATH__,R__ADDR__131.0,,
M256__PATH__,R__ADDR__132.0,,
M264__PATH__,R__ADDR__133.0,,
M272__PATH__,R__ADDR__134.0,,
M280__PATH__,R__ADDR__135.0,,
M288__PATH__,R__ADDR__136.0,,
M296__PATH__,R__ADDR__137.0,,
M304__PATH__,R__ADDR__138.0,,
M312__PATH__,R__ADDR__139.0,,
M320__PATH__,R__ADDR__140.0,,
M328__PATH__,R__ADDR__141.0,,
M336__PATH__,R__ADDR__142.0,,
M344__PATH__,R__ADDR__143.0,,
M352__PATH__,R__ADDR__144.0,,
M360__PATH__,R__ADDR__145.0,,
M368__PATH__,R__ADDR__146.0,,
M376__PATH__,R__ADDR__147.0,,
M384__PATH__,R__ADDR__148.0,,
M392__PATH__,R__ADDR__149.0,,

M_NOK__PATH__,R__ADDR__153.0,m-code out of range,

// -------------------------------------------------------
// local variables Rx154.0 - Rx175.7
// -------------------------------------------------------
// -----------------------------------
// byte
// -----------------------------------

// -----------------------------------
// bool
// -----------------------------------
m1code__PATH__,R__ADDR__154.0,_PATH__:1st m code is active,
m1codm__PATH__,R__ADDR__154.1,_PATH__:memory 1st m code active,
rem1co__PATH__,R__ADDR__154.2,_PATH__:re 1st m code active,
fem1co__PATH__,R__ADDR__154.3,_PATH__:fe 1st m code active,
m1cook__PATH__,R__ADDR__154.4,_PATH__:impulse 1st m code ok,
erm1co__PATH__,R__ADDR__154.5,_PATH__:range error 1st m code,
edivm1__PATH__,R__ADDR__154.6,_PATH__:divsion error 1st m code,
exmwm1__PATH__,R__ADDR__154.7,_PATH__:error writing 1st m code,

m1exec__PATH__,R__ADDR__155.0,_PATH__:1st m-function executed,
m1fin__PATH__,R__ADDR__155.1,_PATH__:1st m-function finished,
#if m_code_support == 1 || m_code_support == 2
m2code__PATH__,R__ADDR__155.2,_PATH__:2nd m code is active,
m2codm__PATH__,R__ADDR__155.3,_PATH__:memory 2nd m code active,
rem2co__PATH__,R__ADDR__155.4,_PATH__:re 2nd m code active,
fem2co__PATH__,R__ADDR__155.5,_PATH__:fe 2nd m code active,
m2cook__PATH__,R__ADDR__155.6,_PATH__:impulse 2nd m code ok,
erm2co__PATH__,R__ADDR__155.7,_PATH__:range error 2nd m code,

edivm2__PATH__,R__ADDR__156.0,_PATH__:divsion error 2nd m code,
exmwm2__PATH__,R__ADDR__156.1,_PATH__:error writing 2nd m code,
m2exec__PATH__,R__ADDR__156.2,_PATH__:2nd m-function executed,
m2fin__PATH__,R__ADDR__156.3,_PATH__:2nd m-function finished,
m3code__PATH__,R__ADDR__156.4,_PATH__:3rd m code is active,
m3codm__PATH__,R__ADDR__156.5,_PATH__:memory 3rd m code active,
rem3co__PATH__,R__ADDR__156.6,_PATH__:re 3rd m code active,
fem3co__PATH__,R__ADDR__156.7,_PATH__:fe 3rd m code active,

m3cook__PATH__,R__ADDR__157.0,_PATH__:impulse 3rd m code ok,
erm3co__PATH__,R__ADDR__157.1,_PATH__:range error 3rd m code,
edivm3__PATH__,R__ADDR__157.2,_PATH__:divsion error 3rd m code,
exmwm3__PATH__,R__ADDR__157.3,_PATH__:error writing 3rd m code,
m3exec__PATH__,R__ADDR__157.4,_PATH__:3rd m-function executed,
m3fin__PATH__,R__ADDR__157.5,_PATH__:3rd m-function finished,
exr1m2__PATH__,R__ADDR__157.6,_PATH__:error reading 2nd m code,
exr1m3__PATH__,R__ADDR__157.7,_PATH__:error reading 3rd m code,
#endif
#if m_code_support == 2
m4code__PATH__,R__ADDR__158.0,_PATH__:4th m-code is active,
m4codm__PATH__,R__ADDR__158.1,_PATH__:memory 4th m-code active,
rem4co__PATH__,R__ADDR__158.2,_PATH__:re 4th m-code active,
fem4co__PATH__,R__ADDR__158.3,_PATH__:fe 4th m-code active,
m4cook__PATH__,R__ADDR__158.4,_PATH__:impulse 4th m-code ok,
erm4co__PATH__,R__ADDR__158.5,_PATH__:range error 4th m-code,
edivm4__PATH__,R__ADDR__158.6,_PATH__:divsion error 4th m-code,
exmwm4__PATH__,R__ADDR__158.7,_PATH__:error writing 4th m-code,

m4exec__PATH__,R__ADDR__159.0,_PATH__:4th m-function executed,
m4fin__PATH__,R__ADDR__159.1,_PATH__:4th m-function finished,
exr1m4__PATH__,R__ADDR__159.2,_PATH__:error reading 4th m-code,
m5code__PATH__,R__ADDR__159.3,_PATH__:5th m-code is active,
m5codm__PATH__,R__ADDR__159.4,_PATH__:memory 5th m-code active,
rem5co__PATH__,R__ADDR__159.5,_PATH__:re 5th m-code active,
fem5co__PATH__,R__ADDR__159.6,_PATH__:fe 5th m-code active,
m5cook__PATH__,R__ADDR__159.7,_PATH__:impulse 5th m-code ok,

erm5co__PATH__,R__ADDR__160.0,_PATH__:range error 5th m-code,
edivm5__PATH__,R__ADDR__160.1,_PATH__:divsion error 5th m-code,
exmwm5__PATH__,R__ADDR__160.2,_PATH__:error writing 5th m-code,
m5exec__PATH__,R__ADDR__160.3,_PATH__:5th m-function executed,
m5fin__PATH__,R__ADDR__160.4,_PATH__:5th m-function finished,
exr1m5__PATH__,R__ADDR__160.5,_PATH__:error reading 5th m-code,
#endif
