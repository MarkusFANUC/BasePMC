!!:--------------------------------------------------------------------------:
!!: File              : axis01_{{PATH}}.src                                       :
!!: Creation date     : 16.09.2013                                           :
!!: Last modification : see table below                                      :
!!: Author            : FANUC FA Switzerland / Peter Bloesch                 :
!!: Description       : path specific management of 1st axis                 :
!!:--------------------------------------------------------------------------:
!!
!!:--------------------------------------------------------------------------:
!!:                     Modification                                         :
!!:--------------------------------------------------------------------------:
!!: Date   :Version: Sign  :Description                                      :
!!:--------------------------------------------------------------------------:
!!:05.11.18: 2.1.0 :Blp    :In case of brake control, the activation of the  :
!!:        :       :       :*IT signal is accelerated when wp coordinate     :
!!:        :       :       :preset is executed or hold to run button is      :
!!:        :       :       :pressed.                                         :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:

!! ===========================================================================
!! Code
!! ===========================================================================

!! ---------------------------------------------------------------------------
!! {{PATH}}: overtravel check
!! if there are limit switches for the 1st axis,
!! replace LOG1 with the real input signals Xxxx.y
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: overtravel check
if there are limit switches for the 1st axis,
replace LOG1 with the real input signals Xxxx.y
*)
#endif
                 RD        LOG1                 ;"logic one"
                 WRT       *+L1_{{PATH}}         ;"overtravel + 1st axis"

                 RD        LOG1                 ;"logic one"
                 WRT       *-L1_{{PATH}}         ;"overtravel - 1st axis"

!! ---------------------------------------------------------------------------
!! reference position return
!! ---------------------------------------------------------------------------
#if ref_dir_1st_axis_{{PATH}} > 0
   #include "axis01ref_{{PATH}}.src"    !! reference position return 1st axis
#endif

!! ---------------------------------------------------------------------------
!! {{PATH}}: led 1st axis selected
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: led 1st axis selected
*)
#endif
                 RD        M_K1AX_{{PATH}}       ;"memory 1st axis selected"
#if ref_dir_1st_axis_{{PATH}} > -1
                 AND.NOT   REFRUN_{{PATH}}       ;"reference return active"
   #if ref_dir_1st_axis_{{PATH}} > 0
                 OR        R_REF1_{{PATH}}       ;"reference return 1st axis"
   #endif
#endif
                 AND       M_MAN_{{PATH}}        ;"manual mode active"
                 WRT       L_1AX_{{PATH}}        ;"led 1st axis sel."

!! ---------------------------------------------------------------------------
!! {{PATH}}: jog feed
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: jog feed
*)
#endif
                 RD        M_K1AX_{{PATH}}       ;"memory 1st axis selected"
                 AND       M_KPLUS_{{PATH}}      ;"memory axis plus dir."
                 AND.NOT   M_REF_{{PATH}}        ;"mode ref selected"
#if ref_dir_1st_axis_{{PATH}} > 0
                 OR        aref_1p_{{PATH}}      ;"ref: move 1st axis +dir."
#endif
                 AND       AX_MEN_{{PATH}}       ;"axis move enable"
#if spindle_support_{{PATH}} == 4 and spindle_sv_axis_{{PATH}} == 1 and spindle_support_P01 > -1
                 AND.NOT   EAX1_{{PATH}}         ;"1st axis is pmc axis"
#endif
                 WRT       J1+_{{PATH}}          ;"feed 1st axis + direction"
                 WRT       L_1AXP_{{PATH}}       ;"led 1st axis + dir."

                 RD        M_K1AX_{{PATH}}       ;"memory 1st axis selected"
                 AND       M_KMINUS_{{PATH}}     ;"memory axis minus dir."
                 AND.NOT   M_REF_{{PATH}}        ;"mode ref selected"
#if ref_dir_1st_axis_{{PATH}} > 0
                 OR        aref_1m_{{PATH}}      ;"ref: move 1st axis -dir."
#endif
                 AND       AX_MEN_{{PATH}}       ;"axis move enable"
#if spindle_support_{{PATH}} == 4 and spindle_sv_axis_{{PATH}} == 1 and spindle_support_P01 > -1
                 AND.NOT   EAX1_{{PATH}}         ;"1st axis is pmc axis"
#endif
                 WRT       J1-_{{PATH}}          ;"feed 1st axis -direction"
                 WRT       L_1AXM_{{PATH}}       ;"led 1st axis - dir."

!! ---------------------------------------------------------------------------
!! {{PATH}}: workpiece coordinate system preset
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: workpiece coordinate system preset
*)
#endif
                 RD        REQWP1_{{PATH}}       ;"req wp coord preset 1st axis"
                 AND       WPRST1_{{PATH}}       ;"wp coord. preset 1st axis"
                 AND       WPSF1_{{PATH}}        ;"wp coord. preset fin 1st axis"
                 OR        RST_{{PATH}}          ;"resetting signal"
                 RST       REQWP1_{{PATH}}       ;"req wp coord preset 1st axis"

                 RD        M101_{{PATH}}         ;"wp coord preset 1st axis"
                 AND       WPRST1_{{PATH}}       ;"wp coord preset 1st axis"
                 AND       WPSF1_{{PATH}}        ;"wp coord preset fin 1st ax"
                 RST       M101_{{PATH}}         ;"wp coord preset 1st axis"

                 RD        FE_RST_{{PATH}}       ;"falling edge reset"
                 AND       wppsreq1_{{PATH}}     ;"req wp coord. preset 1st ax"
                 RD.STK    FEPGMT_{{PATH}}       ;"falling edge program test"
                 AND.NOT   PGMRUN_{{PATH}}       ;"program running"
                 OR.STK    
                 OR        REQWP1_{{PATH}}       ;"req wp coord preset 1st axis"
                 OR        M101_{{PATH}}         ;"wp coord preset 1st axis"
                 RD.STK    WPRST1_{{PATH}}       ;"wp coord. preset 1st axis"
                 AND.NOT   WPSF1_{{PATH}}        ;"wp coord. preset fin 1st axis"
                 OR.STK    
                 AND.NOT   RST_{{PATH}}          ;"resetting signal"
                 WRT       WPRST1_{{PATH}}       ;"wp coord. preset 1st axis"

                 RD        FEPGMT_{{PATH}}       ;"falling edge program test"
                 AND       PGMRUN_{{PATH}}       ;"program running"
                 RD.STK    wppsreq1_{{PATH}}     ;"req wp coord. preset 1st ax"
                 AND.NOT   FE_RST_{{PATH}}       ;"falling edge reset"
                 OR.STK    
                 WRT       wppsreq1_{{PATH}}     ;"req wp coord. preset 1st ax"

#if brake_1st_axis_{{PATH}} == 0
!! ---------------------------------------------------------------------------
!! {{PATH}}: axis interlock
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: axis interlock
*)
   #endif
   #if dcs_support == 1
                 RD        *SGOPN               ;"guard state doors closed"
                 OR        SET_M01_EN           ;"enable setup mode 01"
                 AND       POW_OK_{{PATH}}       ;"power supply axis ok"
   #else
                 RD        POW_OK_{{PATH}}       ;"power suply axis ok"
   #endif
                 AND.NOT   WPRST1_{{PATH}}       ;"wp coord. preset 1st axis"
                 WRT       *IT1_{{PATH}}         ;"interlock 1st axis"

!! ---------------------------------------------------------------------------
!! {{PATH}}: servo off
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: servo off
*)
   #endif
                 RD.NOT    POW_OK_{{PATH}}       ;"power suply axis ok"
                 WRT       SVF1_{{PATH}}         ;"servo off 1st axis"
#else
!! ---------------------------------------------------------------------------
!! {{PATH}}: brake control
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: brake control
*)
   #endif
                 RD        POW_OK_{{PATH}}       ;"power supply axis ok"
                 AND       SA1_{{PATH}}          ;"1st axis servo ready"
                 WRT       relb_1st_{{PATH}}     ;"release brake 1st axis"

!! ---------------------------------------------------------------------------
!! {{PATH}}: delay brake released
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: delay brake released
*)
   #endif
                 RD        relb_1st_{{PATH}}     ;"release brake 1st axis"
                 TMRB      
                           0
                           96
                 WRT       brel_1st_{{PATH}}     ;"brake 1st axis released"

   #if dcs_support == 1
                 RD        *SGOPN               ;"guard state doors closed"
                 OR        SET_M01_EN           ;"enable setup mode 01"
                 AND       brel_1st_{{PATH}}     ;"brake 1st axis released"
   #else
                 RD        brel_1st_{{PATH}}     ;"brake 1st axis released"
   #endif
                 AND.NOT   WPRST1_{{PATH}}       ;"wp coord preset 1st axis"
                 WRT       *IT1_{{PATH}}         ;"interlock 1st axis"

!! ---------------------------------------------------------------------------
!! {{PATH}}: delay brake clamped
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: delay brake clamped
*)
   #endif
                 RD.NOT    relb_1st_{{PATH}}     ;"release brake 1st axis"
                 TMRB      
                           0
                           48
                 WRT       1st_soff_{{PATH}}     ;"1st axis servo off"

!! ---------------------------------------------------------------------------
!! {{PATH}}: servo off
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: servo off
*)
   #endif
                 RD.NOT    FICYCL               ;"first cycle finished"
                 OR        1st_svf1_{{PATH}}     ;"1st servo off 1st axis"
                 AND.NOT   POW_OK_{{PATH}}       ;"power supply axis ok"
                 WRT       1st_svf1_{{PATH}}     ;"1st servo off 1st axis"

                 RD        1st_svf1_{{PATH}}     ;"1st servo off 1st axis"
                 OR        1st_soff_{{PATH}}     ;"1st axis servo off"
                 WRT       SVF1_{{PATH}}         ;"servo off 1st axis"
#endif
!! ---------------------------------------------------------------------------
!! {{PATH}}: external deceleration
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: external deceleration
*)
#endif
                 RD.NOT    SETUP_{{PATH}}        ;"set-up active"
                 WRT       *+ED1_{{PATH}}        ;"external dec. + 1st axis"
                 WRT       *-ED1_{{PATH}}        ;"external dec. - 1st axis"

#if dcs_support == 1
!! ---------------------------------------------------------------------------
!! {{PATH}}: DCS MCC off signal
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: DCS MCC off signal
*)
   #endif
   #if demo_control == 1
                 RD        LOG1                 ;"logic one"
   #else
                 RD        *MCFV1_{{PATH}}       ;"MCC off signal 1st axis"
   #endif
                 WRT       M*MCFV1_{{PATH}}      ;"1st axis MCC off signal"

!! ---------------------------------------------------------------------------
!! {{PATH}}: DCS monitoring result signal
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: DCS monitoring result signal
*)
   #endif
   #if demo_control == 1
                 RD        LOG1                 ;"logic one"
   #else
                 RD        RSV1_{{PATH}}         ;"monitoring result 1st axis"
   #endif
                 WRT       MRSV1_{{PATH}}        ;"1st axis monit. result"

!! ---------------------------------------------------------------------------
!! {{PATH}}: position information effect signal
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
DCS position information effect signal
*)
   #endif
   #if demo_control == 1
                 RD        LOG1                 ;"logic one"
   #else
                 RD        POSE1_{{PATH}}        ;"pos. inf. effect 1st axis"
   #endif
                 WRT       MPOSE1_{{PATH}}       ;"1st axis pos. inf. effect"

!! ---------------------------------------------------------------------------
!! {{PATH}}: DCS safety check activation
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: DCS safety check activation
*)
   #endif
                 RD        *SGOPN               ;"guard state doors closed"
                 WRT       *VLDV1_{{PATH}}       ;"safety check req. 1st ax."

!! ---------------------------------------------------------------------------
!! {{PATH}}: DCS safety zero speed monitoring
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: DCS safety zero speed monitoring
*)
   #endif
                 RD.NOT    DCS_S02              ;"DCS speed set 2"
                 AND.NOT   *SGOPN               ;"guard state doors closed"
                 WRT       SVZR1_{{PATH}}        ;"zero mon. req. 1st axis"

!! ---------------------------------------------------------------------------
!! {{PATH}}: DCS selection of safety speed set 2
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: DCS selection of safety speed set 2
*)
   #endif
                 RD        DCS_S02              ;"DCS speed set 2"
                 WRT       SVA1_{{PATH}}         ;"saf. sel. sig. A 1st axis"
#endif

#if brake_1st_axis_{{PATH}} == 1
!! ---------------------------------------------------------------------------
!! {{PATH}}: management of the brake output
!! replace T_BIT000 with the real brake output Yxxx.y
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: management of the brake output
replace T_BIT000 with the real brake output Yxxx.y
*)
   #endif

   #if dcs_support == 0
                 RD        relb_1st_{{PATH}}     ;"release brake 1st axis"
                 WRT       T_BIT000             ;"temporary bit 000"
   #else
                 RD        relb_1st_{{PATH}}     ;"release brake 1st axis"
                 AND       *BRK1_{{PATH}}        ;"Safety Brake sig. 1st axis"
                 WRT       T_BIT000             ;"temporary bit 000"
   #endif
#endif


