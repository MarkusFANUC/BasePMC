//:--------------------------------------------------------------------------:
//: File              : axis06ref__PATH__.src                                    :
//: Creation date     : 16.09.2013                                           :
//: Last modification : see table below                                      :
//: Author            : FANUC FA Switzerland / Peter Bloesch                 :
//: Description       : Reference position return 6th axis                   :
//:--------------------------------------------------------------------------:
//
//:--------------------------------------------------------------------------:
//:                     Modification                                         :
//:--------------------------------------------------------------------------:
//: Date   :Version: Sign  :Description                                      :
//:--------------------------------------------------------------------------:
//:        :       :       :                                                 :
//:--------------------------------------------------------------------------:
//:        :       :       :                                                 :
//:--------------------------------------------------------------------------:
//:        :       :       :                                                 :
//:--------------------------------------------------------------------------:
//:        :       :       :                                                 :
//:--------------------------------------------------------------------------:

// ===========================================================================
// Code
// ===========================================================================

#if ref_dir_6th_axis__PATH__ == 5 || ref_dir_6th_axis__PATH__ == 6

// ---------------------------------------------------------------------------
// 6th axis reference position return in plus direction without dog
// parameter setting: 1005 bit 1 = 1 (DLZx), 1006 bit 5 = 0 (ZMI)
// ---------------------------------------------------------------------------
   #if ref_dir_6th_axis__PATH__ == 5
      #if net_comment == 1
(*
_PATH__: 6th axis reference position return in plus direction
without dog
parameter setting: 1005 bit 1 = 1 (DLZx), 1006 bit 5 = 0 (ZMI)
*)
      #endif
   #endif

// ---------------------------------------------------------------------------
// 6th axis reference position return in minus direction without dog
// parameter setting: 1005 bit 1 = 1 (DLZx), 1006 bit 5 = 1 (ZMI)
// ---------------------------------------------------------------------------
   #if ref_dir_6th_axis__PATH__ == 6
(*
_PATH__: 6th axis reference position return in minus direction
without dog
parameter setting: 1005 bit 1 = 1 (DLZx), 1006 bit 5 = 1 (ZMI)
*)
   #endif

// ---------------------------------------------------------------------------
// _PATH__: timer to specify the time for one motor revolution
// ---------------------------------------------------------------------------
   #if net_comment == 1
(*
_PATH__: timer to specify the time for one motor revolution
*)
   #endif
                 RD        R_REF6__PATH__       ;"reference return 6th axis"
                 AND       M_REFJ__PATH__       ;"jog mode during ref return"
                 AND       MV6__PATH__          ;"6th axis moving signal"
                 TMRC      
                           5
                           psdog6__PATH__       ;"preset soft. dog 6th axis"
                           csdog6__PATH__       ;"counter soft. dog 6th axis"
                 SET       inctr6__PATH__       ;"increment counter 6th axis"

                 RD        REFSTP__PATH__       ;"stop reference return"
                 OR        ZP6__PATH__          ;"ref position 6th axis"
                 AND       inctr6__PATH__       ;"increment counter 6th axis"
                 RST       inctr6__PATH__       ;"increment counter 6th axis"

// ---------------------------------------------------------------------------
// _PATH__: 6th axis reference position return
// ---------------------------------------------------------------------------
   #if net_comment == 1
(*
_PATH__: 6th axis reference position return
*)
   #endif
                 RD        M_KPLUS__PATH__      ;"memory axis plus dir."
                 OR        M_KMINUS__PATH__     ;"memory axis minus dir."
                 AND       M_K6AX__PATH__       ;"memory 6th axis selected"
                 AND.NOT   AUTREF__PATH__       ;"automatic refernce return"
                 RD.STK    A_REF6__PATH__       ;"auto ref. return 6th axis"
                 OR        R_REF6__PATH__       ;"reference return 6th axis"
                 AND.NOT   ZP6__PATH__          ;"ref position 6th axis"
                 OR.STK    
                 AND.NOT   REFSTP__PATH__       ;"stop reference return"
                 AND.NOT   NOREF6__PATH__       ;"no reference return 6th axis"
                 WRT       R_REF6__PATH__       ;"reference return 6th axis"

                 RD        R_REF6__PATH__       ;"reference return 6th axis"
                 AND.NOT   REFSTP__PATH__       ;"stop reference return"
                 AND.NOT   inctr6__PATH__       ;"increment counter 6th axis"
                 SET       D_REF6__PATH__       ;"6th axis ref without dog"

                 RD        inctr6__PATH__       ;"increment counter 6th axis"
                 OR.NOT    R_REF6__PATH__       ;"reference return 6th axis"
                 OR        REFSTP__PATH__       ;"stop reference return"
                 RST       D_REF6__PATH__       ;"6th axis ref without dog"

                 RD        M_REFJ__PATH__       ;"jog mode during ref return"
                 AND       D_REF6__PATH__       ;"6th axis ref without dog"
                 AND.NOT   inctr6__PATH__       ;"increment counter 6th axis"
                 RD.STK    M_REF__PATH__        ;"mode REF selected"
                 AND.NOT   M_REFJ__PATH__       ;"jog mode during ref return"
                 AND       inctr6__PATH__       ;"increment counter 6th axis"
                 OR.STK    
                 AND       R_REF6__PATH__       ;"reference return 6th axis"
                 AND       D_JOGMV__PATH__      ;"delay jog move"
   #if ref_dir_6th_axis__PATH__ == 5
                 WRT       aref_6p__PATH__      ;"ref: move 6th axis +dir."
   #endif
   #if ref_dir_6th_axis__PATH__ == 6
                 WRT       aref_6m__PATH__      ;"ref: move 6th axis -dir."
   #endif

#else
// ---------------------------------------------------------------------------
// _PATH__: in case of using the reference switch for the 6th axis,
// replace the contact 500ms with the real input signal Xxxx.y
// ---------------------------------------------------------------------------
   #if net_comment == 1
(*
_PATH__: in case of using the reference switch for the 6th axis,
replace the contact 500ms with the real input signal Xxxx.y
*)
   #endif
                 RD        500MS                ;"500 ms"
                 WRT       m_iref6__PATH__      ;"mem ref. switch 6th axis"

// ---------------------------------------------------------------------------
// counter to specify the lenght of the deceleration dog for the
// reference position return of the 6th axis
// ---------------------------------------------------------------------------
   #if net_comment == 1
      #if ref_dir_6th_axis__PATH__ == 1 || ref_dir_6th_axis__PATH__ == 2
(*
_PATH__: counter to specify the lenght of the deceleration dog for
the reference position return of the 6th axis (contact: NC)
*)
      #endif
      #if ref_dir_6th_axis__PATH__ == 3 || ref_dir_6th_axis__PATH__ == 4
(*
_PATH__: counter to specify the lenght of the deceleration dog for
the reference position return of the 6th axis (contact: NO)
*)
      #endif
   #endif
                 RD        LOG1                 ;"logic one"
                 RD.STK.NOT LOG1                ;"logic one"
   #if ref_dir_6th_axis__PATH__ == 1 || ref_dir_6th_axis__PATH__ == 2
                 RD.STK    m_iref6__PATH__      ;"mem ref. switch 6th axis"
   #endif
   #if ref_dir_6th_axis__PATH__ == 3 || ref_dir_6th_axis__PATH__ == 4
                 RD.STK.NOT m_iref6__PATH__     ;"mem ref. switch 6th axis"
   #endif
                 RD.STK    CLOCK                ;"cycle clock pulse"
                 AND       MV6__PATH__          ;"6th axis moving signal"
                 CTRC
                           psdog6__PATH__       ;"preset soft. dog 6th axis"
                           csdog6__PATH__       ;"counter soft. dog 6th axis"
                 WRT       inctr6__PATH__       ;"increment counter 6th axis"

                 RD        inctr6__PATH__       ;"increment counter 6th axis"
                 RD.STK    esdog6__PATH__       ;"end soft dec. dog 6th axis"
   #if ref_dir_6th_axis__PATH__ == 1 || ref_dir_6th_axis__PATH__ == 2 
                 AND.NOT   m_iref6__PATH__      ;"mem ref. switch 6th axis"
   #endif
   #if ref_dir_6th_axis__PATH__ == 3 || ref_dir_6th_axis__PATH__ == 4
                 AND       m_iref6__PATH__      ;"mem ref. switch 6th axis"
   #endif
                 OR.STK
                 WRT       esdog6__PATH__       ;"end soft dec. dog 6th axis"

// ---------------------------------------------------------------------------
// 6th axis reference position return
// ---------------------------------------------------------------------------
   #if net_comment == 1
(*
_PATH__: 6th axis reference position return
*)
   #endif
                 RD        M_KPLUS__PATH__      ;"memory axis plus dir."
                 OR        M_KMINUS__PATH__     ;"memory axis minus dir."
                 AND       M_K6AX__PATH__       ;"memory 6th axis selected"
                 AND.NOT   AUTREF__PATH__       ;"automatic reference return"
                 RD.STK    A_REF6__PATH__       ;"auto ref. return 6th axis"
                 OR        R_REF6__PATH__       ;"reference return 6th axis"
                 AND.NOT   ZP6__PATH__          ;"ref position 6th axis"
                 OR.STK
                 AND.NOT   REFSTP__PATH__       ;"stop reference return"
                 AND.NOT   NOREF6__PATH__       ;"no reference return 6th axis"
                 WRT       R_REF6__PATH__       ;"reference return 6th axis"

// ---------------------------------------------------------------------------
// 6th axis reference position return in plus direction
// parameter setting: 1005 bit 1 = 0 (DLZx), 1006 bit 5 = 0 (ZMI),
// 3003 bit 5 = 0 (DEC), 3006 bit 0 = 1 (GDC)
// ---------------------------------------------------------------------------
   #if ref_dir_6th_axis__PATH__ == 1 || ref_dir_6th_axis__PATH__ == 3 
      #if net_comment == 1
         #if ref_dir_6th_axis__PATH__ == 1
(*
_PATH__: 6th axis reference position return in plus direction
(contact: NC, dog at negative axis limit)
parameter setting: 1005 bit 1 = 0 (DLZx), 1006 bit 5 = 0 (ZMI),
3003 bit 5 = 0 (DEC),  3006 bit 0 = 1 (GDC)
*)
         #endif
         #if ref_dir_6th_axis__PATH__ == 3
(*
_PATH__: 6th axis reference position return in plus direction
(contact: NO, dog at negative axis limit)
parameter setting: 1005 bit 1 = 0 (DLZx), 1006 bit 5 = 0 (ZMI),
3003 bit 5 = 0 (DEC),  3006 bit 0 = 1 (GDC)
*)
         #endif
      #endif
                 RD        R_REF6__PATH__       ;"reference return 6th axis"
      #if ref_dir_6th_axis__PATH__ == 1
                  AND.NOT  m_iref6__PATH__      ;"mem ref. switch 6th axis"
      #endif
      #if ref_dir_6th_axis__PATH__ == 3
                 AND       m_iref6__PATH__      ;"mem ref. switch 6th axis"
      #endif
                 AND.NOT   aref_6m__PATH__      ;"ref: move 6th axis -dir."
                 WRT       aref_6p__PATH__      ;"ref: move 6th axis +dir."

                 RD        R_REF6__PATH__       ;"reference return 6th axis"
                 AND.NOT   aref_6p__PATH__      ;"ref: move 6th axis +dir."
                 WRT       aref_6m__PATH__      ;"ref: move 6th axis -dir."
      #if ref_dir_6th_axis__PATH__ == 1
                 RD        m_iref6__PATH__      ;"mem ref. switch 6th axis"
      #endif
      #if ref_dir_6th_axis__PATH__ == 3
                 RD.NOT    m_iref6__PATH__      ;"mem ref. switch 6th axis"
      #endif
                 RD.STK    esdog6__PATH__       ;"end soft dec. dog 6th axis"
                 AND       MVD6__PATH__         ;"6th axis moving dir. signal"
                 OR.STK
                 OR        aref_6p__PATH__      ;"ref: move 6th axis +dir."
                 WRT       *DEC6__PATH__        ;"deceleration signal 6th axis"
   #endif

// ---------------------------------------------------------------------------
// 6th axis reference position return in minus direction
// parameter setting: 1005 bit 1 = 0 (DLZx), 1006 bit 5 = 1 (ZMI),
// 3003 bit 5 = 0 (DEC), 3006 bit 0 = 1 (GDC)
// ---------------------------------------------------------------------------
   #if ref_dir_6th_axis__PATH__ == 2 || ref_dir_6th_axis__PATH__ == 4
      #if net_comment == 1
         #if ref_dir_6th_axis__PATH__ == 2
(*
_PATH__: 6th axis reference position return in minus direction
(contact: NC, dog at positive axis limit)
parameter setting: 1005 bit 1 = 0 (DLZx), 1006 bit 5 = 1 (ZMI),
3003 bit 5 = 0 (DEC),  3006 bit 0 = 1 (GDC)
*)
         #endif
         #if ref_dir_6th_axis__PATH__ == 4
(*
_PATH__: 6th axis reference position return in minus direction
(contact: NO, dog at positive axis limit)
parameter setting: 1005 bit 1 = 0 (DLZx), 1006 bit 5 = 1 (ZMI),
3003 bit 5 = 0 (DEC),  3006 bit 0 = 1 (GDC)
*)
         #endif
      #endif
                 RD        R_REF6__PATH__       ;"reference return 6th axis"
      #if ref_dir_6th_axis__PATH__ == 2
                 AND.NOT   m_iref6__PATH__      ;"mem ref. switch 6th axis"
      #endif
      #if ref_dir_6th_axis__PATH__ == 4
                 AND       m_iref6__PATH__      ;"mem ref. switch 6th axis"
      #endif
                 AND.NOT   aref_6p__PATH__      ;"ref: move 6th axis +dir."
                 WRT       aref_6m__PATH__      ;"ref: move 6th axis -dir."

                 RD        R_REF6__PATH__       ;"reference return 6th axis"
                 AND.NOT   aref_6m__PATH__      ;"ref: move 6th axis -dir."
                 WRT       aref_6p__PATH__      ;"ref: move 6th axis +dir."
      #if ref_dir_6th_axis__PATH__ == 2
                 RD        m_iref6__PATH__      ;"mem ref. switch 6th axis"
      #endif
      #if ref_dir_6th_axis__PATH__ == 4
                 RD.NOT    m_iref6__PATH__      ;"mem ref. switch 6th axis"
      #endif
                 RD.STK    esdog6__PATH__       ;"end soft dec. dog 6th axis"
                 AND.NOT   MVD6__PATH__         ;"6th axis moving dir. signal"
                 OR.STK
                 OR        aref_6m__PATH__      ;"ref: move 6th axis -dir."
                 WRT       *DEC6__PATH__        ;"deceleration signal 6th axis"
   #endif

#endif
