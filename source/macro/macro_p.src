!!:--------------------------------------------------------------------------:
!!: File              : macro_{{PATH}}.src                                        :
!!: Creation date     : 03.09.2014                                           :
!!: Last modification : see table below                                      :
!!: Author            : FANUC FA Switzerland / Peter Bloesch                 :
!!: Description       : path specific one touch macro code                   :
!!:--------------------------------------------------------------------------:
!!
!!:--------------------------------------------------------------------------:
!!:                     Modification                                         :
!!:--------------------------------------------------------------------------:
!!: Date   :Version: Sign  :Description                                      :
!!:--------------------------------------------------------------------------:
!!:03.05.21: 3.0.0 :Blp    :Forcing of SETMEM_{{PATH}} by reset at abnormal   :
!!:        :       :       :termination added                                :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:

!! ===========================================================================
!! Code
!! ===========================================================================

!! ---------------------------------------------------------------------------
!! description
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
key C05 of standard machine op calls macro 1
key C06 of standard machine op calls macro 2
key C07 of standard machine op calls macro 2
key C08 of standard machine op calls macro 2

CNC parameter :
N06095 = 4 (4 macros)
N06096 = xxxx (starting at Oxxxx)
*)
#endif

!! ---------------------------------------------------------------------------
!! {{PATH}}: one touch macro start enable
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: one touch macro start enable
*)
#endif
                 RD.NOT    REF_OK_{{PATH}}       ;"all axis referenced"
                 OR.NOT    MDCHEN_{{PATH}}       ;"mode change enable"
                 OR        OP_{{PATH}}           ;"automatic operation lamp"
                 WRT.NOT   mcsten_{{PATH}}       ;"macro start enable"

!! ---------------------------------------------------------------------------
!! {{PATH}}: one touch macro call start impulse (>=32ms)
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: one touch macro call start impulse (>=32ms)
*)
#endif
                 RD        MCST1_{{PATH}}        ;"macro call 1 start"
                 OR        MCST2_{{PATH}}        ;"macro call 2 start"
                 OR        MCST3_{{PATH}}        ;"macro call 3 start"
                 OR        MCST4_{{PATH}}        ;"macro call 4 start"
                 TMRB      
                           0
                           48
                 WRT       m_mcst_{{PATH}}       ;"help memory start macro call"

!! ---------------------------------------------------------------------------
!! {{PATH}}: one touch macro call 1
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: one touch macro call 1
*)
#endif
                 RD        K_MC1_{{PATH}}        ;"key macro call 1"
                 AND.NOT   m_k_mc1_{{PATH}}      ;"help memory key macro call 1"
                 WRT       re_k_mc1_{{PATH}}     ;"rising edge key macro call 1"

                 RD        K_MC1_{{PATH}}        ;"key macro call 1"
                 WRT       m_k_mc1_{{PATH}}      ;"help memory key macro call 1"

                 RD        MCEX1_{{PATH}}        ;"macro call 1 in progress"
                 WRT       L_MC1_{{PATH}}        ;"led macro call 1"

                 RD        re_k_mc1_{{PATH}}     ;"rising edge key macro call 1"
                 AND       mcsten_{{PATH}}       ;"macro start enable"
                 OR        MCST1_{{PATH}}        ;"macro call 1 start"
                 AND.NOT   MCRQ_{{PATH}}         ;"mode change request signal"
                 AND.NOT   m_mcst_{{PATH}}       ;"help memory start macro call"
                 AND.NOT   RST_{{PATH}}          ;"resetting signal"
                 WRT       MCST1_{{PATH}}        ;"macro call 1 start"

!! ---------------------------------------------------------------------------
!! {{PATH}}: one touch macro call 2
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: one touch macro call 2
*)
#endif
                 RD        K_MC2_{{PATH}}        ;"key macro call 2"
                 AND.NOT   m_k_mc2_{{PATH}}      ;"help memory key macro call 2"
                 WRT       re_k_mc2_{{PATH}}     ;"rising edge key macro call 2"

                 RD        K_MC2_{{PATH}}        ;"key macro call 2"
                 WRT       m_k_mc2_{{PATH}}      ;"help memory key macro call 2"

                 RD        MCEX2_{{PATH}}        ;"macro call 2 in progress"
                 WRT       L_MC2_{{PATH}}        ;"led macro call 2"

                 RD        re_k_mc2_{{PATH}}     ;"rising edge key macro call 2"
                 AND       mcsten_{{PATH}}       ;"macro start enable"
                 OR        MCST2_{{PATH}}        ;"macro call 2 start"
                 AND.NOT   MCRQ_{{PATH}}         ;"mode change request signal"
                 AND.NOT   m_mcst_{{PATH}}       ;"help memory start macro call"
                 AND.NOT   RST_{{PATH}}          ;"resetting signal"
                 WRT       MCST2_{{PATH}}        ;"macro call 2 start"

!! ---------------------------------------------------------------------------
!! {{PATH}}: one touch macro call 3
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: one touch macro call 3
*)
#endif
                 RD        K_MC3_{{PATH}}        ;"key macro call 3"
                 AND.NOT   m_k_mc3_{{PATH}}      ;"help memory key macro call 3"
                 WRT       re_k_mc3_{{PATH}}     ;"rising edge key macro call 3"

                 RD        K_MC3_{{PATH}}        ;"key macro call 3"
                 WRT       m_k_mc3_{{PATH}}      ;"help memory key macro call 3"

                 RD        MCEX3_{{PATH}}        ;"macro call 3 in progress"
                 WRT       L_MC3_{{PATH}}        ;"led macro call 3"

                 RD        re_k_mc3_{{PATH}}     ;"rising edge key macro call 3"
                 AND       mcsten_{{PATH}}       ;"macro start enable"
                 OR        MCST3_{{PATH}}        ;"macro call 3 start"
                 AND.NOT   MCRQ_{{PATH}}         ;"mode change request signal"
                 AND.NOT   m_mcst_{{PATH}}       ;"help memory start macro call"
                 AND.NOT   RST_{{PATH}}          ;"resetting signal"
                 WRT       MCST3_{{PATH}}        ;"macro call 3 start"

!! ---------------------------------------------------------------------------
!! {{PATH}}: one touch macro call 4
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: one touch macro call 4
*)
#endif
                 RD        K_MC4_{{PATH}}        ;"key macro call 4"
                 AND.NOT   m_k_mc4_{{PATH}}      ;"help memory key macro call 4"
                 WRT       re_k_mc4_{{PATH}}     ;"rising edge key macro call 4"
                 RD        K_MC4_{{PATH}}        ;"key macro call 4"
                 WRT       m_k_mc4_{{PATH}}      ;"help memory key macro call 4"
                 RD        MCEX4_{{PATH}}        ;"macro call 4 in progress"
                 WRT       L_MC4_{{PATH}}        ;"led macro call 4"
                 RD        re_k_mc4_{{PATH}}     ;"rising edge key macro call 4"
                 AND       mcsten_{{PATH}}       ;"macro start enable"
                 OR        MCST4_{{PATH}}        ;"macro call 4 start"
                 AND.NOT   MCRQ_{{PATH}}         ;"mode change request signal"
                 AND.NOT   m_mcst_{{PATH}}       ;"help memory start macro call"
                 AND.NOT   RST_{{PATH}}          ;"resetting signal"
                 WRT       MCST4_{{PATH}}        ;"macro call 4 start"

!! ---------------------------------------------------------------------------
!! {{PATH}}: mode switching request
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: mode switching request
*)
#endif
                 RD        M_HD_{{PATH}}         ;"mode HANDLE selected"
                 OR        m_mchd_{{PATH}}       ;"mem hd was selected before"
                 AND       MCEXE_{{PATH}}        ;"macro call executing signal"
                 WRT       m_mchd_{{PATH}}       ;"mem hd was selected before"

                 RD        MCRQ_{{PATH}}         ;"mode change request signal"
                 AND       MDCHEN_{{PATH}}       ;"mode change enable"
                 WRT       mcmoden_{{PATH}}      ;"macro call mode change enable"

                 RD.NOT    MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND.NOT   MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND.NOT   MD4R_{{PATH}}         ;"mode notification signal 4"
                 AND.NOT   M_MDI_{{PATH}}        ;"mode mdi selected"
                 AND       mcmoden_{{PATH}}      ;"macro call mode change enable"
                 SET       SETMDI_{{PATH}}       ;"force to mode mdi"

                 RD        MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND.NOT   MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND.NOT   MD4R_{{PATH}}         ;"mode notification signal 4"
                 AND.NOT   DNCIR_{{PATH}}        ;"DNC notification signal"
                 AND.NOT   M_MEM_{{PATH}}        ;"mode mem selected"
                 AND       mcmoden_{{PATH}}      ;"macro call mode change enable"
                 SET       SETMEM_{{PATH}}       ;"force to mode mem"

                 RD        MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND.NOT   MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND.NOT   MD4R_{{PATH}}         ;"mode notification signal 4"
                 AND       DNCIR_{{PATH}}        ;"DNC notification signal"
                 AND.NOT   M_DNC_{{PATH}}        ;"mode dnc selected"
                 AND       mcmoden_{{PATH}}      ;"macro call mode change enable"
                 SET       SETDNC_{{PATH}}       ;"force to dnc operation"

                 RD        MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND       MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND.NOT   MD4R_{{PATH}}         ;"mode notification signal 4"
                 AND.NOT   M_EDT_{{PATH}}        ;"mode edit selected"
                 AND       mcmoden_{{PATH}}      ;"macro call mode change enable"
                 SET       SETEDT_{{PATH}}       ;"force to mode edit"
                 RD.NOT    MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND.NOT   MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND       MD4R_{{PATH}}         ;"mode notification signal 4"
                 RD.STK    MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND       MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND       MD4R_{{PATH}}         ;"mode notification signal 4"
                 OR.STK    
                 AND.NOT   m_mchd_{{PATH}}       ;"mem hd was selected before"
                 AND.NOT   M_INC_{{PATH}}        ;"mode INC selected"
                 AND       mcmoden_{{PATH}}      ;"macro call mode change enable"
                 SET       SETINC_{{PATH}}       ;"force to mode inc feed"

                 RD.NOT    MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND.NOT   MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND       MD4R_{{PATH}}         ;"mode notification signal 4"
                 RD.STK    MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND       MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND       MD4R_{{PATH}}         ;"mode notification signal 4"
                 OR.STK    
                 AND       m_mchd_{{PATH}}       ;"mem hd was selected before"
                 AND.NOT   M_HD_{{PATH}}         ;"mode HANDLE selected"
                 AND       mcmoden_{{PATH}}      ;"macro call mode change enable"
                 SET       SET_HD_{{PATH}}       ;"force to mode handle"

                 RD        MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND.NOT   MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND       MD4R_{{PATH}}         ;"mode notification signal 4"
                 RD.STK.NOT MD1R_{{PATH}}        ;"mode notification signal 1"
                 AND       MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND       MD4R_{{PATH}}         ;"mode notification signal 4"
                 OR.STK    
                 AND.NOT   ZRNR_{{PATH}}         ;"ZRN notification signal"
                 AND.NOT   M_JOG_{{PATH}}        ;"mode jog selected"
                 AND       mcmoden_{{PATH}}      ;"macro call mode change enable"
                 SET       SETJOG_{{PATH}}       ;"force to mode jog"

                 RD        MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND.NOT   MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND       MD4R_{{PATH}}         ;"mode notification signal 4"
                 AND       ZRNR_{{PATH}}         ;"ZRN notification signal"
                 AND.NOT   M_REF_{{PATH}}        ;"mode REF selected"
                 AND       mcmoden_{{PATH}}      ;"macro call mode change enable"
                 SET       SETREF_{{PATH}}       ;"force mode ref"
                 RD        MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND       MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND       MD4R_{{PATH}}         ;"mode notification signal 4"
                 AND       M_INC_{{PATH}}        ;"mode INC selected"
                 AND.NOT   m_mchd_{{PATH}}       ;"mem hd was selected before"
                 RD.STK    MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND       MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND       MD4R_{{PATH}}         ;"mode notification signal 4"
                 AND       M_HD_{{PATH}}         ;"mode HANDLE selected"
                 AND       m_mchd_{{PATH}}       ;"mem hd was selected before"
                 OR.STK    
                 RD.STK.NOT MD1R_{{PATH}}        ;"mode notification signal 1"
                 AND       MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND       MD4R_{{PATH}}         ;"mode notification signal 4"
                 AND       M_JOG_{{PATH}}        ;"mode jog selected"
                 OR.STK    
                 AND.NOT   M_TEACH_{{PATH}}      ;"mode TEACH IN selected"
                 AND       mcmoden_{{PATH}}      ;"macro call mode change enable"
                 SET       SETTCH_{{PATH}}       ;"force teach in"

!! ---------------------------------------------------------------------------
!! {{PATH}}: mode switching acknowledge one touch macro call
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: mode switching acknowledge one touch macro call
*)
#endif
                 RD        MCRQ_{{PATH}}         ;"mode change request signal"
                 EQW       
                           SETMODE_{{PATH}}      ;"mode forcing word"
                           0
                 WRT       mc_modeok_{{PATH}}    ;"mc mode change finsihed"

                 RD        mc_modeok_{{PATH}}    ;"mc mode change finsihed"
                 TMRB      
                           0
                           100
                 WRT       dmcfin_{{PATH}}       ;"delay mode completion"

                 RD        M_MDI_{{PATH}}        ;"mode mdi selected"
                 AND.NOT   MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND.NOT   MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND.NOT   MD4R_{{PATH}}         ;"mode notification signal 4"
                 RD.STK    M_MEM_{{PATH}}        ;"mode mem selected"
                 AND       MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND.NOT   MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND.NOT   MD4R_{{PATH}}         ;"mode notification signal 4"
                 AND.NOT   DNCIR_{{PATH}}        ;"DNC notification signal"
                 OR.STK    
                 RD.STK    M_DNC_{{PATH}}        ;"mode dnc selected"
                 AND       MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND.NOT   MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND.NOT   MD4R_{{PATH}}         ;"mode notification signal 4"
                 AND       DNCIR_{{PATH}}        ;"DNC notification signal"
                 OR.STK    
                 RD.STK    M_EDT_{{PATH}}        ;"mode edit selected"
                 AND       MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND       MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND.NOT   MD4R_{{PATH}}         ;"mode notification signal 4"
                 OR.STK    
                 RD.STK    M_INC_{{PATH}}        ;"mode INC selected"
                 OR        M_HD_{{PATH}}         ;"mode HANDLE selected"
                 AND.NOT   MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND.NOT   MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND       MD4R_{{PATH}}         ;"mode notification signal 4"
                 OR.STK    
                 RD.STK    M_INC_{{PATH}}        ;"mode INC selected"
                 OR        M_HD_{{PATH}}         ;"mode HANDLE selected"
                 AND       M_TEACH_{{PATH}}      ;"mode TEACH IN selected"
                 AND       MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND       MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND       MD4R_{{PATH}}         ;"mode notification signal 4"
                 OR.STK    
                 RD.STK    M_JOG_{{PATH}}        ;"mode jog selected"
                 AND.NOT   M_REF_{{PATH}}        ;"mode REF selected"
                 AND       MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND.NOT   MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND       MD4R_{{PATH}}         ;"mode notification signal 4"
                 OR.STK    
                 RD.STK    M_JOG_{{PATH}}        ;"mode jog selected"
                 AND.NOT   M_REF_{{PATH}}        ;"mode REF selected"
                 AND       M_TEACH_{{PATH}}      ;"mode TEACH IN selected"
                 AND.NOT   MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND       MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND       MD4R_{{PATH}}         ;"mode notification signal 4"
                 OR.STK    
                 RD.STK    M_REF_{{PATH}}        ;"mode REF selected"
                 AND       MD1R_{{PATH}}         ;"mode notification signal 1"
                 AND.NOT   MD2R_{{PATH}}         ;"mode notification signal 2"
                 AND       MD4R_{{PATH}}         ;"mode notification signal 4"
                 OR.STK    
                 AND       MCRQ_{{PATH}}         ;"mode change request signal"
                 AND       dmcfin_{{PATH}}       ;"delay mode completion"
                 WRT       MCFIN_{{PATH}}        ;"mode change completion signal"

!! ---------------------------------------------------------------------------
!! {{PATH}}: In case of abnormal termination MEM mode will be called by reset
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: In case of abnormal termination MEM mode will be called by reset
*)
#endif
               RD        MCSP_{{PATH}}           ;"OTM abnormal end"
               AND       MCEXE_{{PATH}}          ;"macro call exec. signal"
               AND       RE_RST_{{PATH}}         ;"rising edge reset"
               SET       SETMEM_{{PATH}}         ;"force to mode mem"

!! ---------------------------------------------------------------------------
!! {{PATH}}: custom macro variable #1000 (used to detect one touch macro call in custo macro)
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: custom macro variable #1000 (used to detect one touch macro call in custo macro)
*)
#endif
                 RD        MCEXE_{{PATH}}        ;"macro call executing signal"
                 WRT       UI000_{{PATH}}        ;"custom macro output bit00"
