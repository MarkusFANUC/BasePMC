!!:--------------------------------------------------------------------------:
!!: File              : s_serial_{{PATH}}.src                                     :
!!: Creation date     : 11.10.2013                                           :
!!: Last modification : see table below                                      :
!!: Author            : FANUC FA Switzerland / Peter Bloesch                 :
!!: Description       : serial spindle                                       :
!!:--------------------------------------------------------------------------:
!!
!!:--------------------------------------------------------------------------:
!!:                     Modification                                         :
!!:--------------------------------------------------------------------------:
!!: Date   :Version: Sign  :Description                                      :
!!:--------------------------------------------------------------------------:
!!:16.07.14: 1.1.0 :Blp    :Monitoring logic for Safe Spindle rotation by    :
!!:        :       :       :Hand for Cs contouring adapted                   :
!!:--------------------------------------------------------------------------:
!!:02.02.18: 2.0.0 :Blp    :spindle STO added                                :
!!:--------------------------------------------------------------------------:
!!:02.06.20: 3.0.0 :Blp    :code 0i-D and 3xi-A removed                      :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:

!! ===========================================================================
!! Code
!! ===========================================================================

!! ---------------------------------------------------------------------------
!! {{PATH}}: this module manages the first serial spindle.
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: this module manages the first serial spindle.
*)
#endif

#if dcs_support == 1
!! ---------------------------------------------------------------------------
!! spindle torque on
!! replace T_BIT000 with the spindle torque output Yxxx.y
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
spindle torque on
replace T_BIT000 with the spindle torque output Yxxx.y
*)
   #endif
                 RD        *SGOPN               ;"guard state doors closed"
                 OR        DCS_S02              ;"DCS speed set 2"
                 WRT.NOT   SP_STO_MON_{{PATH}}   ;"spindle safe torque off"
                 WRT       T_BIT000             ;"temporary bit 000"
#endif

!! ---------------------------------------------------------------------------
!! {{PATH}}: soft start/stop
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: soft start/stop
parameter setting: N04030 (soft start/stop time)
*)
#endif
                 RD.NOT    SETUP_{{PATH}}        ;"set-up active"
                 WRT       SOGNA_{{PATH}}        ;"soft start/stop signal"

!! ---------------------------------------------------------------------------
!! {{PATH}}: ready and alarm signals
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: ready and alarm signals
*)
#endif
#if dcs_support == 1
                 RD        *SGOPN               ;"guard state doors closed"
   #if cs_contour_ctrl_{{PATH}} == 1
                 OR        FSCSL_{{PATH}}        ;"Cs contour ctrl active"
   #endif
                 OR        SET_M01_EN           ;"enable setup mode 01"
                 AND       *ESP_{{PATH}}         ;"emergency stop signal"
#else
                 RD        *ESP_{{PATH}}         ;"emergency stop signal"
#endif
                 WRT       *ESPA_{{PATH}}        ;"emergency stop spindle"

                 RD        MA_{{PATH}}           ;"cnc ready signal"
                 AND       SA_{{PATH}}           ;"servo ready signal"
                 WRT       MRDYA_{{PATH}}        ;"machine ready signal"

                 RD        ALMA_{{PATH}}         ;"alm signal serial spindle"
                 WRT       SP_ALM_{{PATH}}       ;"spindle alarm"

                 RD        RST_{{PATH}}          ;"resetting signal"
                 AND       ALMA_{{PATH}}         ;"alm signal serial spindle"
                 WRT       ARSTA_{{PATH}}        ;"alarm reset signal"

!! ---------------------------------------------------------------------------
!! {{PATH}}: impulse to restart the timer for the speed arrival signal
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: impulse to restart the timer for the speed arrival signal
*)
#endif
                 RD        SP_CW_{{PATH}}        ;"spindle start cw"
                 AND       SRVA_{{PATH}}         ;"ccw command signal"
                 RD.STK    SP_CCW_{{PATH}}       ;"spindle start ccw"
                 AND       SFRA_{{PATH}}         ;"cw command signal"
                 OR.STK
                 OR        RE_SCH_{{PATH}}       ;"rising edge speed change"
                 WRT       sr_sar_{{PATH}}       ;"restart timer for sp_sar"

!! ---------------------------------------------------------------------------
!! {{PATH}}: global variable: SP_RUN_{{PATH}} (spindle turning)
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: global variable: SP_RUN_{{PATH}} (spindle turning)
*)
#endif
                 RD        SP_CW_{{PATH}}        ;"spindle start cw"
                 OR        SP_CCW_{{PATH}}       ;"spindle start ccw"
                 WRT       SP_RUN_{{PATH}}       ;"spindle is turning"

!! ---------------------------------------------------------------------------
!! {{PATH}}: Cs contour control
!! ---------------------------------------------------------------------------
#if cs_contour_ctrl_{{PATH}} == 1
   #if net_comment == 1
(*
{{PATH}}: Cs contour control
*)
   #endif
                 RD        M027_{{PATH}}         ;"Cs contour ctrl on"
                 AND       SSTA_{{PATH}}         ;"spindle speed zero"
                 RD.STK    CON_{{PATH}}          ;"Cs contour ctrl"
                 AND.NOT   M005_{{PATH}}         ;"spindle stop"
                 AND.NOT   M028_{{PATH}}         ;"Cs contour ctrl off"
                 AND.NOT   ALMA_{{PATH}}         ;"alm signal serial spindle"
                 AND.NOT   SP_RUN_{{PATH}}       ;"spindle is turning"
   #if spindle_orientation_{{PATH}} >  0
                 AND.NOT   M019_{{PATH}}         ;"spindle orientation"
   #endif
   #if rigid_tapping_{{PATH}} == 1
                 AND.NOT   M029_{{PATH}}         ;"rigid tapping"
   #endif
                 OR.STK
                 WRT       CON_{{PATH}}          ;"Cs contour ctrl"
                 RD        M027_{{PATH}}         ;"Cs contour ctrl on"
                 AND       CON_{{PATH}}          ;"Cs contour ctrl"
                 AND       FSCSL_{{PATH}}        ;"Cs contour ctrl active"
                 RST       M027_{{PATH}}         ;"Cs contour ctrl on"
                 RD        M028_{{PATH}}         ;"Cs contour ctrl off"
                 AND.NOT   CON_{{PATH}}          ;"Cs contour ctrl"
                 AND.NOT   FSCSL_{{PATH}}        ;"Cs contour ctrl active"
                 RST       M028_{{PATH}}         ;"Cs contour ctrl off"
#endif

!! ---------------------------------------------------------------------------
!! {{PATH}}: spindle start / stop
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: spindle start / stop
*)
#endif
                 RD        SP_CW_{{PATH}}        ;"spindle start cw"
#if rigid_tapping_{{PATH}} == 1 or cs_contour_ctrl_{{PATH}} == 1
                 RD.STK    SSTA_{{PATH}}         ;"spindle speed zero"
                 OR        SFRA_{{PATH}}         ;"cw command signal"
   #if rigid_tapping_{{PATH}} == 1 and cs_contour_ctrl_{{PATH}} == 0
                 AND       RGTAP_{{PATH}}        ;"rigid tapping signal"
   #endif
   #if rigid_tapping_{{PATH}} == 0 and cs_contour_ctrl_{{PATH}} == 1
                 AND       CON_{{PATH}}          ;"Cs contour ctrl"
   #endif
   #if rigid_tapping_{{PATH}} == 1 and cs_contour_ctrl_{{PATH}} == 1
                 RD.STK    RGTAP_{{PATH}}        ;"rigid tapping signal"
                 OR        CON_{{PATH}}          ;"Cs contour ctrl"
                 AND.STK
   #endif
                 OR.STK
#endif
                 WRT       SFRA_{{PATH}}         ;"cw command signal"

                 RD        SP_CCW_{{PATH}}       ;"spindle start ccw"
                 WRT       SRVA_{{PATH}}         ;"ccw command signal"

                 RD.NOT    SP_CW_{{PATH}}        ;"spindle start cw"
                 AND.NOT   SP_CCW_{{PATH}}       ;"spindle start ccw"
                 WRT.NOT   *SSTP_{{PATH}}        ;"spindle stop signal"

!! ---------------------------------------------------------------------------
!! global variables: SP_STP (spindle stopped)
!!                   SAR    (speed arrival signal)
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: global variable: SP_STP_{{PATH}}  (spindle stopped)
*)
#endif
                 RD        SSTA_{{PATH}}         ;"spindle speed zero"
#if demo_control == 1
                 OR        LOG1                 ;"logic one"
#endif
                 AND.NOT   *SSTP_{{PATH}}        ;"spindle stop signal"
                 WRT       SP_STP_{{PATH}}       ;"spindle stopped"


!! ---------------------------------------------------------------------------
!! {{PATH}}: delay speed arrival
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: delay speed arrival
*)
#endif
                 RD        SARA_{{PATH}}         ;"sp speed arrival signal"
#if demo_control == 1
                 OR        LOG1                 ;"logic one"
#endif
                 AND       SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   sr_sar_{{PATH}}       ;"restart timer for sp_sar"
                 TMRB
                           0
                           200
                 WRT       SP_SAR_{{PATH}}       ;"spindle speed arrival"


!! ---------------------------------------------------------------------------
!! {{PATH}}: rigid tapping
!! ---------------------------------------------------------------------------
#if rigid_tapping_{{PATH}} == 1
   #if net_comment == 1
(*
{{PATH}}: rigid tapping
*)
   #endif
                 RD        SSTA_{{PATH}}         ;"spindle speed zero"
                 OR        RGTAP_{{PATH}}        ;"rigid tapping signal"
                 AND       RTAP_{{PATH}}         ;"rigid tapping in progress"
                 WRT       RGTAP_{{PATH}}        ;"rigid tapping signal"

                 RD        RGTAP_{{PATH}}        ;"rigid tapping signal"
                 TMRB
                           0
                           300
                 RST       M029_{{PATH}}         ;"rigid tapping"
#endif

!! ---------------------------------------------------------------------------
!! {{PATH}}: spindle orientation
!! ---------------------------------------------------------------------------
#if spindle_orientation_{{PATH}} >  0
   #if net_comment == 1
(*
{{PATH}}: spindle orientation
*)
   #endif
                 CALLU     SpiOri_{{PATH}}       ;"spindle orientation"
#endif

#if dcs_support == 1
!! ---------------------------------------------------------------------------
!! {{PATH}}: DCS related speed check in case of open doors
!! set data:   MAX_SP_{{PATH}} (max spindle speed)
!!             MAX_SPSET_{{PATH}} (max setup spindle speed)
!!
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: DCS related speed check in case of open doors
set data: MAX_SP_{{PATH}} (max spindle speed)
          MAX_SPSET_{{PATH}} (max setup spindle speed)
*)
   #endif
!! ---------------------------------------------------------------------------
!! {{PATH}}: moving the programmed spindle speed into the temporary
!! variables for further calculations
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: moving the programmed spindle speed into the temporary
variables for further calculations
*)
   #endif

                 RD        LOG1                 ;"logic one"
                 MOVD      
                           S00-S31_{{PATH}}      ;"spindle speed code"
                           TMP_B00              ;"temporary byte 00"

!! ---------------------------------------------------------------------------
!! {{PATH}}: comparison of programmed and maximal spindle speed
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: comparison of programmed and maximal spindle speed
*)
   #endif
                 RD        LOG1                 ;"logic one"
                 LED       
                           TMP_B00              ;"temporary byte 00"
                           MAX_SP_{{PATH}}       ;"maximal spindle speed"
                 WRT       pgspok_{{PATH}}       ;"prog. spindle speed ok"

!! ---------------------------------------------------------------------------
!! {{PATH}}: if the programmed speed is to high, the speed will be
!! clamped to the maximal allowed speed
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: if the programmed speed is to high, the speed will be
clamped to the maximal allowed speed
*)
   #endif
                 RD.NOT    pgspok_{{PATH}}       ;"prog. spindle speed ok"
                 MOVD      
                           MAX_SP_{{PATH}}       ;"maximal spindle speed"
                           TMP_B00              ;"temporary byte 00"

                 RD.NOT    pgspok_{{PATH}}       ;"prog. spindle speed ok"
                 AND.NOT   M_1XXX_{{PATH}}       ;"emergency message active"
                 AND       POW_OK_{{PATH}}       ;"power supply axis ok"
                 WRT       SP_S_NOK_{{PATH}}     ;"spindle speed not ok"

!! ---------------------------------------------------------------------------
!! {{PATH}}: initialisation of temporary variables (4 bytes)
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: initialisation of temporary variables (4 bytes)
*)
   #endif
                 RD        LOG1                 ;"logic one"
                 NUMEB     
                           4
                           0
                           TMP_B04              ;"temporary byte 04"

!! ---------------------------------------------------------------------------
!! {{PATH}}: multiplication of the spindle speed with the spindle override
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: multiplication of the spindle speed with the spindle
override
*)
   #endif
                 RD        LOG1                 ;"logic one"
                 MOVB      
                           SOV_{{PATH}}          ;"spindle speed ovr signal"
                           TMP_B04              ;"temporary byte 04"
                 RD        RST_{{PATH}}          ;"resetting signal"
                 RD.STK    LOG1                 ;"logic one"
                 MULB      
                           1004
                           TMP_B00              ;"temporary byte 00"
                           TMP_B04              ;"temporary byte 04"
                           TMP_B00              ;"temporary byte 00"
                 WRT       emuspov_{{PATH}}      ;"multipl. err spindle ovr."
                 RD        RST_{{PATH}}          ;"resetting signal"
                 RD.STK    LOG1                 ;"logic one"
                 DIVB      
                           4
                           TMP_B00              ;"temporary byte 00"
                           100
                           TMP_B00              ;"temporary byte 00"
                 WRT       edispov_{{PATH}}      ;"division err spindle ovr."

!! ---------------------------------------------------------------------------
!! {{PATH}}: checking max. setup speed
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: checking max. setup speed
*)
   #endif
                 RD.NOT    *SGOPN               ;"guard state doors closed"
                 GTD       
                           TMP_B00              ;"temporary byte 00"
                           MAX_SPSET_{{PATH}}    ;"max spindle setup speed"
                 WRT       sp_mset_{{PATH}}      ;"max. spind. setup speed"
                 RD        sp_mset_{{PATH}}      ;"max. spind. setup speed"
                 MOVD      
                           MAX_SPSET_{{PATH}}    ;"max spindle setup speed"
                           TMP_B00              ;"temporary byte 00"

!! ---------------------------------------------------------------------------
!! {{PATH}}: calculation of the output value for the analog output
!! 4095 * prog. spindle speed / max. allowed speed 
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: calculation of the output value for the analog output
4095 * prog. spindle speed / max. allowed speed
*)
   #endif
                 RD        RST_{{PATH}}          ;"resetting signal"
                 RD.STK    LOG1                 ;"logic one"
                 MULB      
                           4
                           TMP_B00              ;"temporary byte 00"
                           4095
                           TMP_B00              ;"temporary byte 00"
                 WRT       emusps_{{PATH}}       ;"multipl. err spindle speed"
                 RD        RST_{{PATH}}          ;"resetting signal"
                 RD.STK    LOG1                 ;"logic one"
                 DIVB      
                           1004
                           TMP_B00              ;"temporary byte 00"
                           MAX_SP_{{PATH}}       ;"maximal spindle speed"
                           TMP_B00              ;"temporary byte 00"
                 WRT       edisps_{{PATH}}       ;"division err spindle speed"

!! ---------------------------------------------------------------------------
!! {{PATH}}: if the value is greater than 4095 the value will be clamped to 4095
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: if the value is greater than 4095 the value will be clamped
to 4095
*)
   #endif
                 RD        LOG1                 ;"logic one"
                 LED       
                           4095
                           TMP_B00              ;"temporary byte 00"
                 WRT       maxsdr_{{PATH}}       ;"max. spindle speed reached"
                 RD        maxsdr_{{PATH}}       ;"max. spindle speed reached"
                 NUMEB     
                           4
                           4095
                           TMP_B00              ;"temporary byte 00"

!! ---------------------------------------------------------------------------
!! {{PATH}}: when stopping the spindle the output value must be 0
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: when stopping the spindle the output value must be 0
*)
   #endif
                 RD.NOT    SP_RUN_{{PATH}}       ;"spindle is turning"
                 OR        *SGOPN               ;"guard state doors closed"
                 NUMEB     
                           4
                           0
                           TMP_B00              ;"temporary byte 00"

!! ---------------------------------------------------------------------------
!! {{PATH}}: spindle motor speed command
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: spindle motor speed command
*)
   #endif
                 RD        LOG1                 ;"logic one"
                 AND       
                           2
                           TMP_B00              ;"temporary byte 00"
                           4095
                           ROXL_{{PATH}}         ;"sp motor speed command"

!! ---------------------------------------------------------------------------
!! {{PATH}}: PMC spindle control
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: PMC spindle control
*)
   #endif
                 RD.NOT    *SGOPN               ;"guard state doors closed"
                 WRT       SIND_{{PATH}}         ;"spindle mode select signal"

!! ---------------------------------------------------------------------------
!! {{PATH}}: DCS spindle specific MCC off signal
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: DCS spindle specific MCC off signal
*)
   #endif
   #if demo_control == 1
                 RD        LOG1                 ;"logic one"
   #else
                 RD        *MCFP1_{{PATH}}       ;"MCC off signal 1st spindle"
   #endif
                 WRT       M*MCFP1_{{PATH}}      ;"1st spindle MCC off signal"

!! ---------------------------------------------------------------------------
!! {{PATH}}: DCS spindle specific monitoring signal
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: DCS spindle specific monitoring signal
*)
   #endif
   #if demo_control == 1
                 RD        LOG1                 ;"logic one"
   #else
                 RD        RSP1_{{PATH}}         ;"monit. result 1st spindle"
   #endif
                 WRT       MRSP1_{{PATH}}        ;"1st spindle monit. result"

!! ---------------------------------------------------------------------------
!! {{PATH}}: DCS spindle safety check deactivation at closed doors and emergency stop
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: DCS spindle safety check deactivation at closed doors and
emergency stop
*)
   #endif
                 RD        *SGOPN               ;"guard state doors closed"
                 OR        SP_STO_MON_{{PATH}}   ;"spindle safe torque off"
                 WRT       *VLDP1_{{PATH}}       ;"saf. check req. 1st spin."

!! ---------------------------------------------------------------------------
!! {{PATH}}: DCS safety zero speed monitoring
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: DCS safety zero speed monitoring
*)
   #endif
                 RD.NOT    DCS_S02              ;"DCS speed set 2"
                 AND.NOT   *SGOPN               ;"guard state doors closed"
                 AND.NOT   SP_STO_MON_{{PATH}}   ;"spindle safe torque off"
                 WRT       SPZR1_{{PATH}}        ;"zero mon. req. 1st spin."

!! ---------------------------------------------------------------------------
!! {{PATH}}: DCS selection of safety speed set 2
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: DCS selection of safety speed set 2
*)
   #endif
                 RD        DCS_S02              ;"DCS speed set 2"
                 WRT       SPA1_{{PATH}}         ;"saf. sel. A 1st spindle"
#endif
