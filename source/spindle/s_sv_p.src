!!:--------------------------------------------------------------------------:
!!: File              : s_sv_{{PATH}}.src                                         :
!!: Creation date     : 16.09.2013                                           :
!!: Last modification : see table below                                      :
!!: Author            : FANUC FA Switzerland / Peter Bloesch                 :
!!: Description       : Spindle control with servo motor (Live Tool)         :
!!:--------------------------------------------------------------------------:
!!
!!:--------------------------------------------------------------------------:
!!:                     Modification                                         :
!!:--------------------------------------------------------------------------:
!!: Date   :Version: Sign  :Description                                      :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:
!!:        :       :       :                                                 :
!!:--------------------------------------------------------------------------:

!! ===========================================================================
!! Code
!! ===========================================================================

!! ---------------------------------------------------------------------------
!! {{PATH}}: this module manages the xth servo axis as a spindle.
!! ---------------------------------------------------------------------------
#if net_comment == 1
   #if spindle_sv_axis_{{PATH}} == 1
(*
{{PATH}}: this module manages the 1st servo axis as a spindle
(Live Tool).
*)
   #endif
   #if spindle_sv_axis_{{PATH}} == 2
(*
{{PATH}}: this module manages the 2nd servo axis as a spindle
(Live Tool).
*)
   #endif
   #if spindle_sv_axis_{{PATH}} == 3
(*
{{PATH}}: this module manages the 3rd servo axis as a spindle
(Live Tool).
*)
   #endif
   #if spindle_sv_axis_{{PATH}} == 4
(*
{{PATH}}: this module manages the 4th servo axis as a spindle
(Live Tool).
*)
   #endif
   #if spindle_sv_axis_{{PATH}} == 5
(*
{{PATH}}: this module manages the 5th servo axis as a spindle
(Live Tool).
*)
   #endif
   #if spindle_sv_axis_{{PATH}} == 6
(*
{{PATH}}: this module manages the 6th servo axis as a spindle
(Live Tool).
*)
   #endif
   #if spindle_sv_axis_{{PATH}} == 7
(*
{{PATH}}: this module manages the 7th servo axis as a spindle
(Live Tool).
*)
   #endif
   #if spindle_sv_axis_{{PATH}} == 8
(*
{{PATH}}: this module manages the 8th servo axis as a spindle
(Live Tool).
*)
   #endif
#endif

!! ---------------------------------------------------------------------------
!! {{PATH}}: impulse to restart the timer for the speed arrival signal
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: impulse to restart the timer for the speed arrival signal
*)
#endif
                 RD        SP_CW_{{PATH}}        ;"spindle start cw"
#if spindle_sv_axis_{{PATH}} == 1
                 AND       SVRVS1_{{PATH}}       ;"1st axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 2
                 AND       SVRVS2_{{PATH}}       ;"2nd axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 3
                 AND       SVRVS3_{{PATH}}       ;"3rd axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 4
                 AND       SVRVS4_{{PATH}}       ;"4th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 5
                 AND       SVRVS5_{{PATH}}       ;"5th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 6
                 AND       SVRVS6_{{PATH}}       ;"6th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 7
                 AND       SVRVS7_{{PATH}}       ;"7th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 8
                 AND       SVRVS8_{{PATH}}       ;"8th axis SV reverse signal"
#endif
                 RD.STK    SP_CCW_{{PATH}}       ;"spindle start ccw"
#if spindle_sv_axis_{{PATH}} == 1
                 AND.NOT   SVRVS1_{{PATH}}       ;"1st axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 2
                 AND.NOT   SVRVS2_{{PATH}}       ;"2nd axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 3
                 AND.NOT   SVRVS3_{{PATH}}       ;"3rd axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 4
                 AND.NOT   SVRVS4_{{PATH}}       ;"4th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 5
                 AND.NOT   SVRVS5_{{PATH}}       ;"5th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 6
                 AND.NOT   SVRVS6_{{PATH}}       ;"6th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 7
                 AND.NOT   SVRVS7_{{PATH}}       ;"7th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 8
                 AND.NOT   SVRVS8_{{PATH}}       ;"8th axis SV reverse signal"
#endif
                 OR.STK
                 OR        RE_SCH_{{PATH}}       ;"rising edge speed change"
                 WRT       sr_sar_{{PATH}}       ;"restart timer for sp_sar"

!! ---------------------------------------------------------------------------
!! {{PATH}}: global variable SP_RUN_{{PATH}} (spindle turning)
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: global variable SP_RUN (spindle turning)
*)
#endif
                 RD        SP_CW_{{PATH}}        ;"spindle start cw"
                 OR        SP_CCW_{{PATH}}       ;"spindle start ccw"
                 WRT       SP_RUN_{{PATH}}       ;"spindle is turning"

!! ---------------------------------------------------------------------------
!! {{PATH}}: spindle start / stop
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: spindle start / stop
*)
#endif

#if spindle_sv_axis_{{PATH}} == 1
                 RD.NOT    MV1_{{PATH}}          ;"1st axis moving signal"
                 OR        SRVON1_{{PATH}}       ;"1st axis speed ctrl mode"
                 AND       SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   SETUP_{{PATH}}        ;"set-up active"
                 RD.STK    SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   MV1_{{PATH}}          ;"1st axis moving signal"
                 RD.STK    SRVON1_{{PATH}}       ;"1st axis speed ctrl mode"
                 AND.NOT   sp_stop_{{PATH}}      ;"spindle stopped"
                 OR.STK    
                 AND       SETUP_{{PATH}}        ;"set-up active"
                 OR.STK    
                 WRT       SRVON1_{{PATH}}       ;"1st axis speed ctrl mode"
#endif
#if spindle_sv_axis_{{PATH}} == 2
                 RD.NOT    MV2_{{PATH}}          ;"2nd axis moving signal"
                 OR        SRVON2_{{PATH}}       ;"2nd axis speed ctrl mode"
                 AND       SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   SETUP_{{PATH}}        ;"set-up active"
                 RD.STK    SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   MV2_{{PATH}}          ;"2nd axis moving signal"
                 RD.STK    SRVON2_{{PATH}}       ;"2nd axis speed ctrl mode"
                 AND.NOT   sp_stop_{{PATH}}      ;"spindle stopped"
                 OR.STK    
                 AND       SETUP_{{PATH}}        ;"set-up active"
                 OR.STK    
                 WRT       SRVON2_{{PATH}}       ;"2nd axis speed ctrl mode"
#endif
#if spindle_sv_axis_{{PATH}} == 3
                 RD.NOT    MV3_{{PATH}}          ;"3rd axis moving signal"
                 OR        SRVON3_{{PATH}}       ;"3rd axis speed ctrl mode"
                 AND       SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   SETUP_{{PATH}}        ;"set-up active"
                 RD.STK    SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   MV3_{{PATH}}          ;"3rd axis moving signal"
                 RD.STK    SRVON3_{{PATH}}       ;"3rd axis speed ctrl mode"
                 AND.NOT   sp_stop_{{PATH}}      ;"spindle stopped"
                 OR.STK    
                 AND       SETUP_{{PATH}}        ;"set-up active"
                 OR.STK    
                 WRT       SRVON3_{{PATH}}       ;"3rd axis speed ctrl mode"
#endif
#if spindle_sv_axis_{{PATH}} == 4
                 RD.NOT    MV4_{{PATH}}          ;"4th axis moving signal"
                 OR        SRVON4_{{PATH}}       ;"4th axis speed ctrl mode"
                 AND       SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   SETUP_{{PATH}}        ;"set-up active"
                 RD.STK    SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   MV4_{{PATH}}          ;"4th axis moving signal"
                 RD.STK    SRVON4_{{PATH}}       ;"4th axis speed ctrl mode"
                 AND.NOT   sp_stop_{{PATH}}      ;"spindle stopped"
                 OR.STK    
                 AND       SETUP_{{PATH}}        ;"set-up active"
                 OR.STK    
                 WRT       SRVON4_{{PATH}}       ;"4th axis speed ctrl mode"
#endif
#if spindle_sv_axis_{{PATH}} == 5
                 RD.NOT    MV5_{{PATH}}          ;"5th axis moving signal"
                 OR        SRVON5_{{PATH}}       ;"5th axis speed ctrl mode"
                 AND       SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   SETUP_{{PATH}}        ;"set-up active"
                 RD.STK    SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   MV5_{{PATH}}          ;"5th axis moving signal"
                 RD.STK    SRVON5_{{PATH}}       ;"5th axis speed ctrl mode"
                 AND.NOT   sp_stop_{{PATH}}      ;"spindle stopped"
                 OR.STK    
                 AND       SETUP_{{PATH}}        ;"set-up active"
                 OR.STK    
                 WRT       SRVON5_{{PATH}}       ;"5th axis speed ctrl mode"
#endif
#if spindle_sv_axis_{{PATH}} == 6
                 RD.NOT    MV6_{{PATH}}          ;"6th axis moving signal"
                 OR        SRVON6_{{PATH}}       ;"6th axis speed ctrl mode"
                 AND       SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   SETUP_{{PATH}}        ;"set-up active"
                 RD.STK    SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   MV6_{{PATH}}          ;"6th axis moving signal"
                 RD.STK    SRVON6_{{PATH}}       ;"6th axis speed ctrl mode"
                 AND.NOT   sp_stop_{{PATH}}      ;"spindle stopped"
                 OR.STK    
                 AND       SETUP_{{PATH}}        ;"set-up active"
                 OR.STK    
                 WRT       SRVON6_{{PATH}}       ;"6th axis speed ctrl mode"
#endif
#if spindle_sv_axis_{{PATH}} == 7
                 RD.NOT    MV7_{{PATH}}          ;"7th axis moving signal"
                 OR        SRVON7_{{PATH}}       ;"7th axis speed ctrl mode"
                 AND       SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   SETUP_{{PATH}}        ;"set-up active"
                 RD.STK    SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   MV7_{{PATH}}          ;"7th axis moving signal"
                 RD.STK    SRVON7_{{PATH}}       ;"7th axis speed ctrl mode"
                 AND.NOT   sp_stop_{{PATH}}      ;"spindle stopped"
                 OR.STK    
                 AND       SETUP_{{PATH}}        ;"set-up active"
                 OR.STK    
                 WRT       SRVON7_{{PATH}}       ;"7th axis speed ctrl mode"
#endif
#if spindle_sv_axis_{{PATH}} == 8
                 RD.NOT    MV8_{{PATH}}          ;"8th axis moving signal"
                 OR        SRVON8_{{PATH}}       ;"8th axis speed ctrl mode"
                 AND       SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   SETUP_{{PATH}}        ;"set-up active"
                 RD.STK    SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   MV8_{{PATH}}          ;"8th axis moving signal"
                 RD.STK    SRVON8_{{PATH}}       ;"8th axis speed ctrl mode"
                 AND.NOT   sp_stop_{{PATH}}      ;"spindle stopped"
                 OR.STK    
                 AND       SETUP_{{PATH}}        ;"set-up active"
                 OR.STK    
                 WRT       SRVON8_{{PATH}}       ;"8th axis speed ctrl mode"
#endif

                 RD.NOT    SP_CW_{{PATH}}        ;"spindle start cw"
                 AND.NOT   SP_CCW_{{PATH}}       ;"spindle start ccw"
                 WRT.NOT   *SSTP_{{PATH}}        ;"spindle stop signal"

                 RD.NOT    *SSTP_{{PATH}}        ;"spindle stop signal"
#if spindle_sv_axis_{{PATH}} == 1
                 AND.NOT   MV1_{{PATH}}          ;"1st axis moving signal"
#endif
#if spindle_sv_axis_{{PATH}} == 2
                 AND.NOT   MV2_{{PATH}}          ;"2nd axis moving signal"
#endif
#if spindle_sv_axis_{{PATH}} == 3
                 AND.NOT   MV3_{{PATH}}          ;"3rd axis moving signal"
#endif
#if spindle_sv_axis_{{PATH}} == 4
                 AND.NOT   MV4_{{PATH}}          ;"4th axis moving signal"
#endif
#if spindle_sv_axis_{{PATH}} == 5
                 AND.NOT   MV5_{{PATH}}          ;"5th axis moving signal"
#endif
#if spindle_sv_axis_{{PATH}} == 6
                 AND.NOT   MV6_{{PATH}}          ;"6th axis moving signal"
#endif
#if spindle_sv_axis_{{PATH}} == 7
                 AND.NOT   MV6_{{PATH}}          ;"6th axis moving signal"
#endif
#if spindle_sv_axis_{{PATH}} == 8
                 AND.NOT   MV8_{{PATH}}          ;"8th axis moving signal"
#endif
                 WRT       sp_stop_{{PATH}}      ;"spindle stopped"

!! ---------------------------------------------------------------------------
!! global variable: SP_STP (spindle stopped)
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: global variable: SP_STP_{{PATH}}  (spindle stopped)
*)
#endif
                 RD.NOT    *SSTP_{{PATH}}        ;"spindle stop signal"
#if spindle_sv_axis_{{PATH}} == 1
                 AND.NOT   MV1_{{PATH}}          ;"1st axis moving signal"
                 AND.NOT   SVREV1_{{PATH}}       ;"1st axis speed ctrl mode"
                 AND.NOT   SPP1_{{PATH}}         ;"1st axis sp index signal"
#endif
#if spindle_sv_axis_{{PATH}} == 2
                 AND.NOT   MV2_{{PATH}}          ;"2nd axis moving signal"
                 AND.NOT   SVREV2_{{PATH}}       ;"2nd axis speed ctrl mode"
                 AND.NOT   SPP2_{{PATH}}         ;"2nd axis sp index signal"
#endif
#if spindle_sv_axis_{{PATH}} == 3
                 AND.NOT   MV3_{{PATH}}          ;"3rd axis moving signal"
                 AND.NOT   SVREV3_{{PATH}}       ;"3rd axis speed ctrl mode"
                 AND.NOT   SPP3_{{PATH}}         ;"3rd axis sp index signal"
#endif
#if spindle_sv_axis_{{PATH}} == 4
                 AND.NOT   MV4_{{PATH}}          ;"4th axis moving signal"
                 AND.NOT   SVREV4_{{PATH}}       ;"4th axis speed ctrl mode"
                 AND.NOT   SPP4_{{PATH}}         ;"4th axis sp index signal"
#endif
#if spindle_sv_axis_{{PATH}} == 5
                 AND.NOT   MV5_{{PATH}}          ;"5th axis moving signal"
                 AND.NOT   SVREV5_{{PATH}}       ;"5th axis speed ctrl mode"
                 AND.NOT   SPP5_{{PATH}}         ;"5th axis spindle index signal"
#endif
#if spindle_sv_axis_{{PATH}} == 6
                 AND.NOT   MV6_{{PATH}}          ;"6th axis moving signal"
                 AND.NOT   SVREV6_{{PATH}}       ;"6th axis speed ctrl mode"
                 AND.NOT   SPP6_{{PATH}}         ;"6th axis sp index signal"
#endif
#if spindle_sv_axis_{{PATH}} == 7
                 AND.NOT   MV7_{{PATH}}          ;"7th axis moving signal"
                 AND.NOT   SVREV7_{{PATH}}       ;"7th axis speed ctrl mode"
                 AND.NOT   SPP7_{{PATH}}         ;"7th axis sp index signal"
#endif
#if spindle_sv_axis_{{PATH}} == 8
                 AND.NOT   MV8_{{PATH}}          ;"8th axis moving signal"
                 AND.NOT   SVREV8_{{PATH}}       ;"8th axis speed ctrl mode"
                 AND.NOT   SPP8_{{PATH}}         ;"8th axis sp index signal"
#endif
                 WRT       SP_STP_{{PATH}}       ;"spindle stopped"

!! ---------------------------------------------------------------------------
!! {{PATH}}: spindle direction
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: spindle direction
*)
#endif
                 RD        SP_CCW_{{PATH}}       ;"spindle start ccw"
#if spindle_sv_axis_{{PATH}} == 1
                 RD.STK    SVRVS1_{{PATH}}       ;"1st axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 2
                 RD.STK    SVRVS2_{{PATH}}       ;"2nd axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 3
                 RD.STK    SVRVS3_{{PATH}}       ;"3rd axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 4
                 RD.STK    SVRVS4_{{PATH}}       ;"4th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 5
                 RD.STK    SVRVS5_{{PATH}}       ;"5th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 6
                 RD.STK    SVRVS6_{{PATH}}       ;"6th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 7
                 RD.STK    SVRVS7_{{PATH}}       ;"7th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 8
                 RD.STK    SVRVS8_{{PATH}}       ;"8th axis SV reverse signal"
#endif
                 AND.NOT   SP_CW_{{PATH}}        ;"spindle start cw"
                 OR.STK
#if spindle_sv_axis_{{PATH}} == 1
                 WRT       SVRVS1_{{PATH}}       ;"1st axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 2
                 WRT       SVRVS2_{{PATH}}       ;"2nd axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 3
                 WRT       SVRVS3_{{PATH}}       ;"3rd axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 4
                 WRT       SVRVS4_{{PATH}}       ;"4th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 5
                 WRT       SVRVS5_{{PATH}}       ;"5th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 6
                 WRT       SVRVS6_{{PATH}}       ;"6th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 7
                 WRT       SVRVS7_{{PATH}}       ;"7th axis SV reverse signal"
#endif
#if spindle_sv_axis_{{PATH}} == 8
                 WRT       SVRVS8_{{PATH}}       ;"8th axis SV reverse signal"
#endif

!! ---------------------------------------------------------------------------
!! {{PATH}}: delay speed arrival
!! ---------------------------------------------------------------------------
#if net_comment == 1
(*
{{PATH}}: delay speed arrival
*)
#endif
   #if spindle_sv_axis_{{PATH}} == 1
                 RD        SVSAR1_{{PATH}}       ;"1st axis SV speed arrival"
                 AND.NOT   SVSST1_{{PATH}}       ;"1st axis SV zero-speed"
   #endif
   #if spindle_sv_axis_{{PATH}} == 2
                 RD        SVSAR2_{{PATH}}       ;"2nd axis SV speed arrival"
                 AND.NOT   SVSST2_{{PATH}}       ;"2nd axis SV zero-speed"
   #endif
   #if spindle_sv_axis_{{PATH}} == 3
                 RD        SVSAR3_{{PATH}}       ;"3rd axis SV speed arrival"
                 AND.NOT   SVSST3_{{PATH}}       ;"3rd axis SV zero-speed"
   #endif
   #if spindle_sv_axis_{{PATH}} == 4
                 RD        SVSAR4_{{PATH}}       ;"4th axis SV speed arrival"
                 AND.NOT   SVSST4_{{PATH}}       ;"4th axis SV zero-speed"
   #endif
   #if spindle_sv_axis_{{PATH}} == 5
                 RD        SVSAR5_{{PATH}}       ;"5th axis SV speed arrival"
                 AND.NOT   SVSST5_{{PATH}}       ;"5th axis SV zero-speed"
   #endif
   #if spindle_sv_axis_{{PATH}} == 6
                 RD        SVSAR6_{{PATH}}       ;"6th axis SV speed arrival"
                 AND.NOT   SVSST6_{{PATH}}       ;"6th axis SV zero-speed"
   #endif
   #if spindle_sv_axis_{{PATH}} == 7
                 RD        SVSAR7_{{PATH}}       ;"7th axis SV speed arrival"
                 AND.NOT   SVSST7_{{PATH}}       ;"7th axis SV zero-speed"
   #endif
   #if spindle_sv_axis_{{PATH}} == 8
                 RD        SVSAR8_{{PATH}}       ;"8th axis SV speed arrival"
                 AND.NOT   SVSST8_{{PATH}}       ;"8th axis SV zero-speed"
   #endif
   #if demo_control == 1
                 OR        LOG1                 ;"logic one"
   #endif
                 WRT       T_BIT000             ;"temporary bit 000"

                 RD        T_BIT000             ;"temporary bit 000"
                 AND       SP_RUN_{{PATH}}       ;"spindle is turning"
                 AND.NOT   sr_sar_{{PATH}}       ;"restart timer for sp_sar"
                 TMRB
                           0
                           200
                 WRT       SP_SAR_{{PATH}}       ;"spindle speed arrival"

!! ---------------------------------------------------------------------------
!! {{PATH}}: rigid tapping
!! ---------------------------------------------------------------------------
#if rigid_tapping_{{PATH}} == 1
   #if net_comment == 1
(*
{{PATH}}: rigid tapping
*)
   #endif

   #if spindle_sv_axis_{{PATH}} == 1
                 RD.NOT    MV1_{{PATH}}          ;"1st axis moving signal"
                 AND.NOT   SVREV1_{{PATH}}       ;"1st axis speed ctrl mode"
   #endif
   #if spindle_sv_axis_{{PATH}} == 2
                 RD.NOT    MV2_{{PATH}}          ;"2nd axis moving signal"
                 AND.NOT   SVREV2_{{PATH}}       ;"2nd axis speed ctrl mode"
   #endif
   #if spindle_sv_axis_{{PATH}} == 3
                 RD.NOT    MV3_{{PATH}}          ;"3rd axis moving signal"
                 AND.NOT   SVREV3_{{PATH}}       ;"3rd axis speed ctrl mode"
   #endif
   #if spindle_sv_axis_{{PATH}} == 4
                 RD.NOT    MV4_{{PATH}}          ;"4th axis moving signal"
                 AND.NOT   SVREV4_{{PATH}}       ;"4th axis speed ctrl mode"
   #endif
   #if spindle_sv_axis_{{PATH}} == 5
                 RD.NOT    MV5_{{PATH}}          ;"5th axis moving signal"
                 AND.NOT   SVREV5_{{PATH}}       ;"5th axis speed ctrl mode"
   #endif
   #if spindle_sv_axis_{{PATH}} == 6
                 RD.NOT    MV6_{{PATH}}          ;"6th axis moving signal"
                 AND.NOT   SVREV6_{{PATH}}       ;"6th axis speed ctrl mode"
   #endif
   #if spindle_sv_axis_{{PATH}} == 7
                 RD.NOT    MV7_{{PATH}}          ;"7th axis moving signal"
                 AND.NOT   SVREV7_{{PATH}}       ;"7th axis speed ctrl mode"
   #endif
   #if spindle_sv_axis_{{PATH}} == 8
                 RD.NOT    MV8_{{PATH}}          ;"8th axis moving signal"
                 AND.NOT   SVREV8_{{PATH}}       ;"8th axis speed ctrl mode"
   #endif
                 OR        RGTAP_{{PATH}}        ;"rigid tapping signal"
                 AND       RTAP_{{PATH}}         ;"rigid tapping in progress"
                 WRT       RGTAP_{{PATH}}        ;"rigid tapping signal"

                 RD        RGTAP_{{PATH}}        ;"rigid tapping signal"
                 TMRB
                           0
                           300
                 RST       M029_{{PATH}}         ;"rigid tapping"
#endif

#if dcs_support == 1
!! ---------------------------------------------------------------------------
!! {{PATH}}: DCS related speed check in case of open doors
!! set data:   MAX_SP_{{PATH}} (max spindle speed)
!!             MAX_SPSET_{{PATH}} (max setup spindle speed)
!!
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: DCS related speed check in case of open doors
set data: MAX_SP_{{PATH}} (max spindle speed)
          MAX_SPSET_{{PATH}} (max setup spindle speed)
*)
   #endif
!! ---------------------------------------------------------------------------
!! {{PATH}}: moving the programmed spindle speed into the temporary
!! variables for further calculations
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: moving the programmed spindle speed into the temporary
variables for further calculations
*)
   #endif

                 RD        LOG1                 ;"logic one"
                 MOVD      
                           S00-S31_{{PATH}}      ;"spindle speed code"
                           TMP_B00              ;"temporary byte 00"

!! ---------------------------------------------------------------------------
!! {{PATH}}: comparison of programmed and maximal spindle speed
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: comparison of programmed and maximal spindle speed
*)
   #endif
                 RD        LOG1                 ;"logic one"
                 LED       
                           TMP_B00              ;"temporary byte 00"
                           MAX_SP_{{PATH}}       ;"maximal spindle speed"
                 WRT       pgspok_{{PATH}}       ;"prog. spindle speed ok"

!! ---------------------------------------------------------------------------
!! {{PATH}}: if the programmed speed is to high, the speed will be
!! clamped to the maximal allowed speed
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: if the programmed speed is to high, the speed will be
clamped to the maximal allowed speed
*)
   #endif
                 RD.NOT    pgspok_{{PATH}}       ;"prog. spindle speed ok"
                 MOVD      
                           MAX_SP_{{PATH}}       ;"maximal spindle speed"
                           TMP_B00              ;"temporary byte 00"

                 RD.NOT    pgspok_{{PATH}}       ;"prog. spindle speed ok"
                 AND.NOT   M_1XXX_{{PATH}}       ;"emergency message active"
                 AND       POW_OK_{{PATH}}       ;"power supply axis ok"
                 WRT       SP_S_NOK_{{PATH}}     ;"spindle speed not ok"

!! ---------------------------------------------------------------------------
!! {{PATH}}: initialisation of temporary variables (4 bytes)
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: initialisation of temporary variables (4 bytes)
*)
   #endif
                 RD        LOG1                 ;"logic one"
                 NUMEB     
                           4
                           0
                           TMP_B04              ;"temporary byte 04"

!! ---------------------------------------------------------------------------
!! {{PATH}}: multiplication of the spindle speed with the spindle override
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: multiplication of the spindle speed with the spindle
override
*)
   #endif
                 RD        LOG1                 ;"logic one"
                 MOVB      
                           SOV_{{PATH}}          ;"spindle speed ovr signal"
                           TMP_B04              ;"temporary byte 04"
                 RD        RST_{{PATH}}          ;"resetting signal"
                 RD.STK    LOG1                 ;"logic one"
                 MULB      
                           1004
                           TMP_B00              ;"temporary byte 00"
                           TMP_B04              ;"temporary byte 04"
                           TMP_B00              ;"temporary byte 00"
                 WRT       emuspov_{{PATH}}      ;"multipl. err spindle ovr."
                 RD        RST_{{PATH}}          ;"resetting signal"
                 RD.STK    LOG1                 ;"logic one"
                 DIVB      
                           4
                           TMP_B00              ;"temporary byte 00"
                           100
                           TMP_B00              ;"temporary byte 00"
                 WRT       edispov_{{PATH}}      ;"division err spindle ovr."

!! ---------------------------------------------------------------------------
!! {{PATH}}: checking max. setup speed
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: checking max. setup speed
*)
   #endif
                 RD.NOT    *SGOPN               ;"guard state doors closed"
                 GTD       
                           TMP_B00              ;"temporary byte 00"
                           MAX_SPSET_{{PATH}}    ;"max spindle setup speed"
                 WRT       sp_mset_{{PATH}}      ;"max. spind. setup speed"
                 RD        sp_mset_{{PATH}}      ;"max. spind. setup speed"
                 MOVD      
                           MAX_SPSET_{{PATH}}    ;"max spindle setup speed"
                           TMP_B00              ;"temporary byte 00"

!! ---------------------------------------------------------------------------
!! {{PATH}}: calculation of the output value for the analog output
!! 4095 * prog. spindle speed / max. allowed speed 
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: calculation of the output value for the analog output
4095 * prog. spindle speed / max. allowed speed
*)
   #endif
                 RD        RST_{{PATH}}          ;"resetting signal"
                 RD.STK    LOG1                 ;"logic one"
                 MULB      
                           4
                           TMP_B00              ;"temporary byte 00"
                           4095
                           TMP_B00              ;"temporary byte 00"
                 WRT       emusps_{{PATH}}       ;"multipl. err spindle speed"
                 RD        RST_{{PATH}}          ;"resetting signal"
                 RD.STK    LOG1                 ;"logic one"
                 DIVB      
                           1004
                           TMP_B00              ;"temporary byte 00"
                           MAX_SP_{{PATH}}       ;"maximal spindle speed"
                           TMP_B00              ;"temporary byte 00"
                 WRT       edisps_{{PATH}}       ;"division err spindle speed"

!! ---------------------------------------------------------------------------
!! {{PATH}}: if the value is greater than 4095 the value will be clamped to 4095
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: if the value is greater than 4095 the value will be clamped
to 4095
*)
   #endif
                 RD        LOG1                 ;"logic one"
                 LED       
                           4095
                           TMP_B00              ;"temporary byte 00"
                 WRT       maxsdr_{{PATH}}       ;"max. spindle speed reached"
                 RD        maxsdr_{{PATH}}       ;"max. spindle speed reached"
                 NUMEB     
                           4
                           4095
                           TMP_B00              ;"temporary byte 00"

!! ---------------------------------------------------------------------------
!! {{PATH}}: when stopping the spindle the output value must be 0
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: when stopping the spindle the output value must be 0
*)
   #endif
                 RD.NOT    SP_RUN_{{PATH}}       ;"spindle is turning"
                 OR        *SGOPN               ;"guard state doors closed"
                 NUMEB     
                           4
                           0
                           TMP_B00              ;"temporary byte 00"

!! ---------------------------------------------------------------------------
!! {{PATH}}: spindle motor speed command
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: spindle motor speed command
*)
   #endif
                 RD        LOG1                 ;"logic one"
                 AND       
                           2
                           TMP_B00              ;"temporary byte 00"
                           4095
                           ROXL_{{PATH}}         ;"sp motor speed command"

!! ---------------------------------------------------------------------------
!! {{PATH}}: PMC spindle control
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: PMC spindle control
*)
   #endif
                 RD.NOT    *SGOPN               ;"guard state doors closed"
                 WRT       SIND_{{PATH}}         ;"spindle mode select signal"

!! ---------------------------------------------------------------------------
!! {{PATH}}: DCS spindle safety check deactivation
!! ---------------------------------------------------------------------------
   #if net_comment == 1
(*
{{PATH}}: DCS spindle safety check deactivation
*)
   #endif
                 RD        LOG1                 ;"logic one"
                 WRT       *VLDP1_{{PATH}}       ;"saf. check req. 1st spin."
#endif
