//:--------------------------------------------------------------------------:
//: File              : sysprm.src                                           :
//: Creation date     : 05.11.2013                                           :
//: Last modification : see table below                                      :
//: Author            : FANUC FA Switzerland / Peter Bloesch                 :
//: Description       : System parameters and title                          :
//:--------------------------------------------------------------------------:
//
//:--------------------------------------------------------------------------:
//:                     Modification                                         :
//:--------------------------------------------------------------------------:
//: Date   :Version: Sign  :Description                                      :
//:--------------------------------------------------------------------------:
//:08.09.14: 1.1.0 :Blp    :0i-F added                                       :
//:--------------------------------------------------------------------------:
//:26.09.16: 2.0.0 :Blp    :I/O group assignment changed                     :
//:--------------------------------------------------------------------------:
//:        :       :       :                                                 :
//:--------------------------------------------------------------------------:

// ===========================================================================
// Include files
// ===========================================================================
#include "..\config.def"

// ===========================================================================
// system parameters
// ===========================================================================
%@A
%@0
2 BINARY
3 NO
// ---------------------------------------------------------------------------
// pmc type
// ---------------------------------------------------------------------------
// -----------------------------------
// 0i-D
// -----------------------------------
#if pmc_type == 1
4 0i-D PMC
#endif
// -----------------------------------
// Power Motion i-A
// -----------------------------------
#if pmc_type == 2
   #if pmc_mem_type == 0
4 Power Motion i-A PMC(MEM-B,EXI)
   #endif
   #if pmc_mem_type == 1
4 Power Motion i-A PMC(MEM-C,EXI)
   #endif
   #if pmc_mem_type == 2
4 Power Motion i-A PMC(MEM-D,EXI)
   #endif
#endif
// -----------------------------------
// 30i-A
// -----------------------------------
#if pmc_type == 3
   #if pmc_mem_type == 1 || pmc_mem_type == 2
4 30i-A PMC(MEM-C)
   #else
4 30i-A PMC
   #endif
#endif
// -----------------------------------
// 31i-A
// -----------------------------------
#if pmc_type == 4
   #if pmc_mem_type == 1 ||pmc_mem_type == 2
4 31i-A PMC(MEM-C)
   #else
4 31i-A PMC
   #endif
#endif
// -----------------------------------
// 32i-A
// -----------------------------------
#if pmc_type == 5
   #if pmc_mem_type == 1 || pmc_mem_type == 2
4 32i-A PMC(MEM-C)
   #else
4 32i-A PMC
   #endif
#endif
// -----------------------------------
// 35i-B
// -----------------------------------
#if pmc_type == 6
   #if pmc_mem_type == 0
4 35i-B PMC(MEM-B,EXI)
   #endif
   #if pmc_mem_type == 1
4 35i-B PMC(MEM-C,EXI)
   #endif
   #if pmc_mem_type == 2
4 35i-B PMC(MEM-D,EXI)
   #endif
#endif
// -----------------------------------
// 30i-B
// -----------------------------------
#if pmc_type == 7
   #if pmc_mem_type == 0
4 30i-B PMC(MEM-B,EXI)
   #endif
   #if pmc_mem_type == 1
4 30i-B PMC(MEM-C,EXI)
   #endif
   #if pmc_mem_type == 2
4 30i-B PMC(MEM-D,EXI)
   #endif
   #if pmc_mem_type == 3 || nbr_of_path > 10
4 30i-B PMC(MEM-E,EXI)
   #endif
#endif
// -----------------------------------
// 31i-B
// -----------------------------------
#if pmc_type == 8
   #if pmc_mem_type == 0
4 31i-B PMC(MEM-B,EXI)
   #endif
   #if pmc_mem_type == 1
4 31i-B PMC(MEM-C,EXI)
   #endif
   #if pmc_mem_type == 2
4 31i-B PMC(MEM-D,EXI)
   #endif
#endif
// -----------------------------------
// 32i-B
// -----------------------------------
#if pmc_type == 9
   #if pmc_mem_type == 0
4 32i-B PMC(MEM-B,EXI)
   #endif
   #if pmc_mem_type == 1
4 32i-B PMC(MEM-C,EXI)
   #endif
   #if pmc_mem_type == 2
4 32i-B PMC(MEM-D,EXI)
   #endif
#endif
// -----------------------------------
// 0i-F
// -----------------------------------
#if pmc_type == 10
   #if pmc_mem_type == 0
4 0i-F PMC(MEM-B,EXI)
   #endif
   #if pmc_mem_type == 1
4 0i-F PMC(MEM-C,EXI)
   #endif
   #if pmc_mem_type == 2
4 0i-F PMC(MEM-D,EXI)
   #endif
#endif

// ---------------------------------------------------------------------------
// I/O link assignment selection function
// ---------------------------------------------------------------------------
#if io_link_type == 0
   #if start_address_op == 1 || start_address_op == 2
11 USE
      #if operatorspanel == 1
         #if handwheel_support < 2
12 2
         #else
12 3
         #endif
      #endif
      #if operatorspanel == 2
         #if handwheel_support < 2
12 1
         #else
12 2
         #endif
      #endif
   #else
      #if handwheel_support == 2
11 USE
12 1
      #else
11 UNUSE
12 0
      #endif
   #endif
#else
11 UNUSE
12 0
#endif
13 UNUSE
14 0
15 UNUSE
16 0
17 UNUSE
18 0

// ---------------------------------------------------------------------------
// Language display
// ---------------------------------------------------------------------------
31 1
32 -1
33 0
%
// ---------------------------------------------------------------------------
// title
// ---------------------------------------------------------------------------
%@1
01 MULTI-PATH BASE PMC PROGRAM
02

// -----------------------------------
// 0i-D
// -----------------------------------
#if pmc_type == 1
03 0i-D PMC
#endif
// -----------------------------------
// Power Motion i-A
// -----------------------------------
#if pmc_type == 2
   #if pmc_mem_type == 0
03 Power Motion i-A PMC(MEM-B,EXI)
   #endif
   #if pmc_mem_type == 1
03 Power Motion i-A PMC(MEM-C,EXI)
   #endif
   #if pmc_mem_type == 2
03 Power Motion i-A PMC(MEM-D,EXI)
   #endif
#endif
// -----------------------------------
// 30i-A
// -----------------------------------
#if pmc_type == 3
   #if pmc_mem_type == 1 || pmc_mem_type == 2
03 30i-A PMC(MEM-C)
   #else
03 30i-A PMC(MEM-B)
   #endif
#endif
// -----------------------------------
// 31i-A
// -----------------------------------
#if pmc_type == 4
   #if pmc_mem_type == 1 || pmc_mem_type == 2
03 31i-A PMC(MEM-C)
   #else
03 31i-A PMC(MEM-B)
   #endif
#endif
// -----------------------------------
// 32i-A
// -----------------------------------
#if pmc_type == 5
   #if pmc_mem_type == 1 || pmc_mem_type == 2
03 32i-A PMC(MEM-C)
   #else
03 32i-A PMC(MEM-B)
   #endif
#endif
// -----------------------------------
// 35i-B
// -----------------------------------
#if pmc_type == 6
   #if pmc_mem_type == 0
03 35i-B PMC(MEM-B,EXI)
   #endif
   #if pmc_mem_type == 1
03 35i-B PMC(MEM-C,EXI)
   #endif
   #if pmc_mem_type == 2
03 35i-B PMC(MEM-D,EXI)
   #endif
#endif
// -----------------------------------
// 30i-B
// -----------------------------------
#if pmc_type == 7
   #if pmc_mem_type == 0
03 30i-B PMC(MEM-B,EXI)
   #endif
   #if pmc_mem_type == 1
03 30i-B PMC(MEM-C,EXI)
   #endif
   #if pmc_mem_type == 2
03 30i-B PMC(MEM-D,EXI)
   #endif
   #if pmc_mem_type == 3 || nbr_of_path > 10
03 30i-B PMC(MEM-E,EXI)
   #endif
#endif
// -----------------------------------
// 31i-B
// -----------------------------------
#if pmc_type == 8
   #if pmc_mem_type == 0
03 31i-B PMC(MEM-B,EXI)
   #endif
   #if pmc_mem_type == 1
03 31i-B PMC(MEM-C,EXI)
   #endif
   #if pmc_mem_type == 2
03 31i-B PMC(MEM-D,EXI)
   #endif
#endif
// -----------------------------------
// 32i-B
// -----------------------------------
#if pmc_type == 9
   #if pmc_mem_type == 0
03 32i-B PMC(MEM-B,EXI)
   #endif
   #if pmc_mem_type == 1
03 32i-B PMC(MEM-C,EXI)
   #endif
   #if pmc_mem_type == 2
03 32i-B PMC(MEM-D,EXI)
   #endif
#endif
// -----------------------------------
// 0i-F
// -----------------------------------
#if pmc_type == 10
   #if pmc_mem_type == 0
03 0i-F PMC(MEM-B,EXI)
   #endif
   #if pmc_mem_type == 1
03 0i-F PMC(MEM-C,EXI)
   #endif
   #if pmc_mem_type == 2
03 0i-F PMC(MEM-D,EXI)
   #endif
#endif
08 P. BLOESCH
%
