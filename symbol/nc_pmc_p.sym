//:--------------------------------------------------------------------------:
//: File              : nc_pmc__PATH__.sym                                       :
//: Creation date     : 16.09.2013                                           :
//: Last modification : see table below                                      :
//: Author            : FANUC FA Switzerland / Peter Bloesch                 :
//: Description       : Symbol definitions for the path specific CNC <-> PMC :
//:                   : interface                                            :
//:--------------------------------------------------------------------------:
//
//:--------------------------------------------------------------------------:
//:                     Modification                                         :
//:--------------------------------------------------------------------------:
//: Date   :Version: Sign  :Description                                      :
//:--------------------------------------------------------------------------:
//:03.09.14: 1.1.0 :Blp    :Signals for One Touch Macro Call added           :
//:--------------------------------------------------------------------------:
//:20.07.18: 2.0.0 :Blp    :HCLP signal independent of MPG                   :
//:        :       :       :4th and 5th M-code added                         :
//:        :       :       :PMC axis control signals for path 11-15 added    :
//:--------------------------------------------------------------------------:
//:        :       :       :                                                 :
//:--------------------------------------------------------------------------:
//:        :       :       :                                                 :
//:--------------------------------------------------------------------------:

// ===========================================================================
// Input signal to the PMC from the CNC
// ===========================================================================
// -----------------------------------
// byte:
// -----------------------------------
MFCS__PATH__,F__ADDR__010,_PATH__:m-function code signal,

#if m_code_support == 1
MF2CS__PATH__,F__ADDR__014,_PATH__:2nd m function code signal,
MF3CS__PATH__,F__ADDR__016,_PATH__:3rd m function code signal,
#endif

#if m_code_support == 2
MF2CS__PATH__,F__ADDR__014,_PATH__:2nd m-function code signal,
MF3CS__PATH__,F__ADDR__564,_PATH__:3rd m-function code signal,
MF4CS__PATH__,F__ADDR__568,_PATH__:4th m-function code signal,
MF5CS__PATH__,F__ADDR__572,_PATH__:5th m-function code signal,
#endif

#if spindle_support__PATH__ > 0 && spindle_support_P01 > -1
S00-S31__PATH__,F__ADDR__022,_PATH__:spindle speed code,
#endif

#if operatorspanel == 0 || soft_op_panel == 1
*FV0O_7O__PATH__,F__ADDR__078,_PATH__:sop: feedrate override,
*JV0O_15O__PATH__,F__ADDR__079,_PATH__:sop: jog feed rate ovr,
#endif

// UO200__PATH__,F__ADDR__280,_PATH__:outputs custom macro UO200-231,
// UO216__PATH__,F__ADDR__282,_PATH__:output custom macro UO216-231,
// UO300__PATH__,F__ADDR__284,_PATH__:outputs custom macro UO300-331,

// -----------------------------------
// bool:
// -----------------------------------
RWD__PATH__,F__ADDR__000.0,_PATH__:rewinding signal,
SPL__PATH__,F__ADDR__000.4,_PATH__:feed hold lamp signal,
STL__PATH__,F__ADDR__000.5,_PATH__:cycle start lamp signal,
SA__PATH__,F__ADDR__000.6,_PATH__:servo ready signal,
OP__PATH__,F__ADDR__000.7,_PATH__:automatic operation lamp,
AL__PATH__,F__ADDR__001.0,_PATH__:alarm signal,
RST__PATH__,F__ADDR__001.1,_PATH__:resetting signal,
BAL__PATH__,F__ADDR__001.2,_PATH__:battery alarm signal,
DEN__PATH__,F__ADDR__001.3,_PATH__:distribution end signal,
MA__PATH__,F__ADDR__001.7,_PATH__:cnc ready signal,
MDRN__PATH__,F__ADDR__002.7,_PATH__:dry run check signal,
MINC__PATH__,F__ADDR__003.0,_PATH__:mode incremental feed,
MH__PATH__,F__ADDR__003.1,_PATH__:mode handle,
MJ__PATH__,F__ADDR__003.2,_PATH__:jog feed sel. check signal,
MMDI__PATH__,F__ADDR__003.3,_PATH__:mode mdi selected,
MRMT__PATH__,F__ADDR__003.4,_PATH__:dnc operation,
MMEM__PATH__,F__ADDR__003.5,_PATH__:mode memory operation,
MEDT__PATH__,F__ADDR__003.6,_PATH__:mode edit,
MTCHIN__PATH__,F__ADDR__003.7,_PATH__:teach in sel. check signal,
MBDT1__PATH__,F__ADDR__004.0,_PATH__:blk skip btd1 check signal,
MMLK__PATH__,F__ADDR__004.1,_PATH__:all axis lock check signal,
MSBK__PATH__,F__ADDR__004.3,_PATH__:single block check signal,
MAFL__PATH__,F__ADDR__004.4,_PATH__:aux. funct. lock check,
MREF__PATH__,F__ADDR__004.5,_PATH__:mode manual ref. return,
MBDT2__PATH__,F__ADDR__005.0,_PATH__:skip block signal mbdt2,
B_RST__PATH__,F__ADDR__006.1,_PATH__:button reset,
MF__PATH__,F__ADDR__007.0,_PATH__:m-function strobe signal,
#if spindle_support__PATH__ > 0 && spindle_support_P01 > -1
SF__PATH__,F__ADDR__007.2,_PATH__:spindle strobe signal,
#endif

#if t_code_support__PATH__ > 0 && t_code_support_P01 > -1
TF__PATH__,F__ADDR__007.3,_PATH__:tool function strobe,
#endif

#if b_code_support__PATH__ > 0 && b_code_support_P01 > -1
BF__PATH__,F__ADDR__007.7,_PATH__:2nd aux. function strobe,
#endif

#if m_code_support == 1 || m_code_support == 2
MF2__PATH__,F__ADDR__008.4,_PATH__:2nd m function strobe,
MF3__PATH__,F__ADDR__008.5,_PATH__:3rd m function strobe,
#endif

#if m_code_support == 2
MF4__PATH__,F__ADDR__008.6,_PATH__:4th m-function strobe,
MF5__PATH__,F__ADDR__008.7,_PATH__:5th m-function strobe,
#endif

#if spindle_support__PATH__ == 1 && spindle_support_P01 > -1
ALMA__PATH__,F__ADDR__045.0,_PATH__:alm signal serial spindle,
SSTA__PATH__,F__ADDR__045.1,_PATH__:spindle speed zero,
SARA__PATH__,F__ADDR__045.3,_PATH__:sp speed arrival signal,
   #if spindle_orientation__PATH__ > 0
ORARA__PATH__,F__ADDR__045.7,_PATH__:orient. completion signal,
   #endif
   #if cs_contour_ctrl__PATH__ == 1
FSCSL__PATH__,F__ADDR__044.1,_PATH__:Cs contour ctrl active,
   #endif
EXOFA__PATH__,F__ADDR__047.4,spindle exitation off,
#endif

#if operatorspanel == 0 || soft_op_panel == 1
OUT0__PATH__,F__ADDR__072.0,_PATH__:sop: emergency stop,
OUT1__PATH__,F__ADDR__072.1,_PATH__:sop: external reset,
OUT2__PATH__,F__ADDR__072.2,_PATH__:sop: nc start,
OUT3__PATH__,F__ADDR__072.3,_PATH__:sop: dnc mode,
OUT4__PATH__,F__ADDR__072.4,_PATH__:sop: optional stop m01,
OUT5__PATH__,F__ADDR__072.5,_PATH__:sop: coolant on,
OUT6__PATH__,F__ADDR__072.6,_PATH__:sop: spindle on,
OUT7__PATH__,F__ADDR__072.7,_PATH__:sop: spindle ccw,
MD1O__PATH__,F__ADDR__073.0,_PATH__:sop: signal md1,
MD2O__PATH__,F__ADDR__073.1,_PATH__:sop: signal md2,
MD4O__PATH__,F__ADDR__073.2,_PATH__:sop: signal md4,
ZRNO__PATH__,F__ADDR__073.4,_PATH__:sop: signal zrn,
BDTO__PATH__,F__ADDR__075.2,_PATH__:sop: optional block skip,
SBKO__PATH__,F__ADDR__075.3,_PATH__:sop: single block,
MLKO__PATH__,F__ADDR__075.4,_PATH__:sop: machine lock,
DRNO__PATH__,F__ADDR__075.5,_PATH__:sop: dry run,
SPO__PATH__,F__ADDR__075.7,_PATH__:sop: feed hold,
MP1O__PATH__,F__ADDR__076.0,_PATH__:sop: hd feed magnific. mp1,
MP2O__PATH__,F__ADDR__076.1,_PATH__:sop: hd feed magnific. mp2,
ROV1O__PATH__,F__ADDR__076.4,_PATH__:sop: rapid traverse rov1,
ROV2O__PATH__,F__ADDR__076.5,_PATH__:sop: rapid traverse rov2,
HS1AO__PATH__,F__ADDR__077.0,_PATH__:sop: hd axis sel. signal1,
HS1BO__PATH__,F__ADDR__077.1,_PATH__:sop: hd axis sel. signal2,
HS1CO__PATH__,F__ADDR__077.2,_PATH__:sop: hd axis sel. signal3,
HS1DO__PATH__,F__ADDR__077.3,_PATH__:sop: hd axis sel. signal4,
RTO__PATH__,F__ADDR__077.6,_PATH__:sop: manual rapid traverse,
J1O+__PATH__,F__ADDR__081.0,_PATH__:sop: 1st axis + direction,
J1O-__PATH__,F__ADDR__081.1,_PATH__:sop: 1st axis - direction,
   #if axis_number__PATH__ > 1
J2O+__PATH__,F__ADDR__081.2,_PATH__:sop: 2nd axis + direction,
J2O-__PATH__,F__ADDR__081.3,_PATH__:sop: 2nd axis - direction,
   #endif
   #if axis_number__PATH__ > 2
J3O+__PATH__,F__ADDR__081.4,_PATH__:sop: 3rd axis + direction,
J3O-__PATH__,F__ADDR__081.5,_PATH__:sop: 3rd axis - direction,
   #endif
   #if axis_number__PATH__ > 3
J4O+__PATH__,F__ADDR__081.6,_PATH__:sop: 4th axis + direction,
J4O-__PATH__,F__ADDR__081.7,_PATH__:sop: 4th axis - direction,
   #endif
#endif

#if (spindle_support__PATH__ == 1 || spindle_support__PATH__ == 5) && spindle_support_P01 > -1
   #if rigid_tapping__PATH__ == 1
RTAP__PATH__,F__ADDR__076.3,_PATH__:rigid tapping in progress,
   #endif
#endif

ZP1__PATH__,F__ADDR__094.0,_PATH__:ref position 1st axis,
MV1__PATH__,F__ADDR__102.0,_PATH__:1st axis moving signal,
INP1__PATH__,F__ADDR__104.0,_PATH__:1st axis in-pos. signal,
MVD1__PATH__,F__ADDR__106.0,_PATH__:1st axis moving dir.-,
ZRF1__PATH__,F__ADDR__120.0,_PATH__:1st axis referenced,
SA1__PATH__,F__ADDR__186.0,_PATH__:1st axis servo ready,
WPSF1__PATH__,F__ADDR__358.0,_PATH__:wp coord preset fin 1st ax,
SVD001__PATH__,F__ADDR__688.0,_PATH__:1st axis brake ctrl mode,

#if axis_number__PATH__ > 1 || (spindle_sv_axis__PATH__ == 2 && spindle_support_P01 > -1)
ZP2__PATH__,F__ADDR__094.1,_PATH__:ref position 2nd axis,
MV2__PATH__,F__ADDR__102.1,_PATH__:2nd axis moving signal,
INP2__PATH__,F__ADDR__104.1,_PATH__:2nd axis in-pos. signal,
MVD2__PATH__,F__ADDR__106.1,_PATH__:2nd axis moving dir.-,
ZRF2__PATH__,F__ADDR__120.1,_PATH__:2nd axis referenced,
SA2__PATH__,F__ADDR__186.1,_PATH__:2nd axis servo ready,
WPSF2__PATH__,F__ADDR__358.1,_PATH__:wp coord preset fin 2nd ax,
SVD002__PATH__,F__ADDR__688.1,_PATH__:2nd axis brake ctrl mode,
#endif

#if axis_number__PATH__ > 2 || (spindle_sv_axis__PATH__ == 3 && spindle_support_P01 > -1)
ZP3__PATH__,F__ADDR__094.2,_PATH__:ref position 3rd axis,
MV3__PATH__,F__ADDR__102.2,_PATH__:3rd axis moving signal,
INP3__PATH__,F__ADDR__104.2,_PATH__:3rd axis in-pos. signal,
MVD3__PATH__,F__ADDR__106.2,_PATH__:3rd axis moving dir.-,
ZRF3__PATH__,F__ADDR__120.2,_PATH__:3rd axis referenced,
SA3__PATH__,F__ADDR__186.2,_PATH__:3rd axis servo ready,
WPSF3__PATH__,F__ADDR__358.2,_PATH__:wp coord preset fin 3rd ax,
SVD003__PATH__,F__ADDR__688.2,_PATH__:3rd axis brake ctrl mode,
#endif

#if axis_number__PATH__ > 3 || (spindle_sv_axis__PATH__ == 4 && spindle_support_P01 > -1)
ZP4__PATH__,F__ADDR__094.3,_PATH__:ref position 4th axis,
MV4__PATH__,F__ADDR__102.3,_PATH__:4th axis moving signal,
INP4__PATH__,F__ADDR__104.3,_PATH__:4th axis in-pos. signal,
MVD4__PATH__,F__ADDR__106.3,_PATH__:4th axis moving dir.-,
ZRF4__PATH__,F__ADDR__120.3,_PATH__:4th axis referenced,
SA4__PATH__,F__ADDR__186.3,_PATH__:4th axis servo ready,
WPSF4__PATH__,F__ADDR__358.3,_PATH__:wp coord preset fin 4th ax,
SVD004__PATH__,F__ADDR__688.3,_PATH__:4th axis brake ctrl mode,
#endif

#if axis_number__PATH__ > 4 || (spindle_sv_axis__PATH__ == 5 && spindle_support_P01 > -1)
ZP5__PATH__,F__ADDR__094.4,_PATH__:ref position 5th axis,
MV5__PATH__,F__ADDR__102.4,_PATH__:5th axis moving signal,
INP5__PATH__,F__ADDR__104.4,_PATH__:5th axis in-pos. signal,
MVD5__PATH__,F__ADDR__106.4,_PATH__:5th axis moving dir.-,
ZRF5__PATH__,F__ADDR__120.4,_PATH__:5th axis referenced,
SA5__PATH__,F__ADDR__186.4,_PATH__:5th axis servo ready,
WPSF5__PATH__,F__ADDR__358.4,_PATH__:wp coord preset fin 5th ax,
SVD005__PATH__,F__ADDR__688.4,_PATH__:5th axis brake ctrl mode,
#endif

#if axis_number__PATH__ > 5 || (spindle_sv_axis__PATH__ == 6 && spindle_support_P01 > -1)
ZP6__PATH__,F__ADDR__094.5,_PATH__:ref position 6th axis,
MV6__PATH__,F__ADDR__102.5,_PATH__:6th axis moving signal,
INP6__PATH__,F__ADDR__104.5,_PATH__:6th axis in-pos. signal,
MVD6__PATH__,F__ADDR__106.5,_PATH__:6th axis moving dir.-,
ZRF6__PATH__,F__ADDR__120.5,_PATH__:6th axis referenced,
SA6__PATH__,F__ADDR__186.5,_PATH__:6th axis servo ready,
WPSF6__PATH__,F__ADDR__358.5,_PATH__:wp coord preset fin 6th ax,
SVD006__PATH__,F__ADDR__688.5,_PATH__:6th axis brake ctrl mode,
#endif

#if axis_number__PATH__ > 6 || (spindle_sv_axis__PATH__ == 7 && spindle_support_P01 > -1) 
ZP7__PATH__,F__ADDR__094.6,_PATH__:ref position 7th axis,
MV7__PATH__,F__ADDR__102.6,_PATH__:7th axis moving signal,
INP7__PATH__,F__ADDR__104.6,_PATH__:7th axis in-pos. signal,
MVD7__PATH__,F__ADDR__106.6,_PATH__:7th axis moving dir.-,
ZRF7__PATH__,F__ADDR__120.6,_PATH__:7th axis referenced,
SA7__PATH__,F__ADDR__186.6,_PATH__:7th axis servo ready,
WPSF7__PATH__,F__ADDR__358.6,_PATH__:wp coord preset fin 7th ax,
SVD007__PATH__,F__ADDR__688.6,_PATH__:7th axis brake ctrl mode,
#endif

#if axis_number__PATH__ > 7 || (spindle_sv_axis__PATH__ == 8 && spindle_support_P01 > -1)
ZP8__PATH__,F__ADDR__094.7,_PATH__:ref position 8th axis,
MV8__PATH__,F__ADDR__102.7,_PATH__:8th axis moving signal,
INP8__PATH__,F__ADDR__104.7,_PATH__:8th axis in-pos. signal,
MVD8__PATH__,F__ADDR__106.7,_PATH__:8th axis moving dir.-,
ZRF8__PATH__,F__ADDR__120.7,_PATH__:8th axis referenced,
SA8__PATH__,F__ADDR__186.7,_PATH__:8th axis servo ready,
WPSF8__PATH__,F__ADDR__358.7,_PATH__:wp coord preset fin 8th ax,
SVD008__PATH__,F__ADDR__688.7,_PATH__:8th axis brake ctrl mode,
#endif

#if spindle_support__PATH__ == 4 && spindle_support_P01 > -1
   #if spindle_sv_axis__PATH__ == 1
EACNT1__PATH__,F__ADDR__182.0,_PATH__:1st axis sel. status sig.,
   #endif
   #if spindle_sv_axis__PATH__ == 2
EACNT2__PATH__,F__ADDR__182.1,_PATH__:2nd axis sel. status sig.,
   #endif
   #if spindle_sv_axis__PATH__ == 3
EACNT3__PATH__,F__ADDR__182.2,_PATH__:3rd axis sel. status sig.,
   #endif
   #if spindle_sv_axis__PATH__ == 4
EACNT4__PATH__,F__ADDR__182.3,_PATH__:4th axis sel. status sig.,
   #endif
   #if spindle_sv_axis__PATH__ == 5
EACNT5__PATH__,F__ADDR__182.4,_PATH__:5th axis sel. status sig.,
   #endif
   #if spindle_sv_axis__PATH__ == 6
EACNT6__PATH__,F__ADDR__182.5,_PATH__:6th axis sel. status sig.,
   #endif
   #if spindle_sv_axis__PATH__ == 7
EACNT7__PATH__,F__ADDR__182.6,_PATH__:7th axis sel. status sig.,
   #endif
   #if spindle_sv_axis__PATH__ == 8
EACNT8__PATH__,F__ADDR__182.7,_PATH__:8th axis sel. status sig.,
   #endif
#endif

#if spindle_support__PATH__ == 5 && spindle_support_P01 > -1
   #if spindle_sv_axis__PATH__ == 1
SVSST1__PATH__,F__ADDR__376.0,_PATH__:1st axis SV zero-speed,
SVSAR1__PATH__,F__ADDR__377.0,_PATH__:1st axis SV speed arrival,
SVREV1__PATH__,F__ADDR__521.0,_PATH__:1st axis speed ctrl mode,
SPP1__PATH__,F__ADDR__522.0,_PATH__:1st axis sp index sign.,
   #endif
   #if spindle_sv_axis__PATH__ == 2
SVSST2__PATH__,F__ADDR__376.1,_PATH__:2nd axis SV zero-speed,
SVSAR2__PATH__,F__ADDR__377.1,_PATH__:2nd axis SV speed arrival,
SVREV2__PATH__,F__ADDR__521.1,_PATH__:2nd axis speed ctrl mode,
SPP2__PATH__,F__ADDR__522.1,_PATH__:2nd axis sp index signal,
   #endif
   #if spindle_sv_axis__PATH__ == 3
SVSST3__PATH__,F__ADDR__376.2,_PATH__:3rd axis SV zero-speed,
SVSAR3__PATH__,F__ADDR__377.2,_PATH__:3rd axis SV speed arrival,
SVREV3__PATH__,F__ADDR__521.2,_PATH__:3rd axis speed ctrl mode,
SPP3__PATH__,F__ADDR__522.2,_PATH__:3rd axis sp index signal,
   #endif
   #if spindle_sv_axis__PATH__ == 4
SVSST4__PATH__,F__ADDR__376.3,_PATH__:4th axis SV zero-speed,
SVSAR4__PATH__,F__ADDR__377.3,_PATH__:4th axis SV speed arrival,
SVREV4__PATH__,F__ADDR__521.3,_PATH__:4th axis speed ctrl mode,
SPP4__PATH__,F__ADDR__522.3,_PATH__:4th axis sp index signal,
   #endif
   #if spindle_sv_axis__PATH__ == 5
SVSST5__PATH__,F__ADDR__376.4,_PATH__:5th axis SV zero-speed,
SVSAR5__PATH__,F__ADDR__377.4,_PATH__:5th axis SV speed arrival,
SVREV5__PATH__,F__ADDR__521.4,_PATH__:5th axis speed ctrl mode,
SPP5__PATH__,F__ADDR__522.4,_PATH__:5th axis sp index signal,
   #endif
   #if spindle_sv_axis__PATH__ == 6
SVSST6__PATH__,F__ADDR__376.5,_PATH__:6th axis SV zero-speed,
SVSAR6__PATH__,F__ADDR__377.5,_PATH__:6th axis SV speed arrival,
SVREV6__PATH__,F__ADDR__521.5,_PATH__:6th axis speed ctrl mode,
SPP6__PATH__,F__ADDR__522.5,_PATH__:6th axis sp index signal,
   #endif
   #if spindle_sv_axis__PATH__ == 7
SVSST7__PATH__,F__ADDR__376.6,_PATH__:7th axis SV zero-speed,
SVSAR7__PATH__,F__ADDR__377.6,_PATH__:7th axis SV speed arrival,
SVREV7__PATH__,F__ADDR__521.6,_PATH__:7th axis speed ctrl mode,
SPP7__PATH__,F__ADDR__522.6,_PATH__:7th axis sp index signal,
   #endif
   #if spindle_sv_axis__PATH__ == 8
SVSST8__PATH__,F__ADDR__376.7,_PATH__:8th axis SV zero-speed,
SVSAR8__PATH__,F__ADDR__377.7,_PATH__:8th axis SV speed arrival,
SVREV8__PATH__,F__ADDR__521.7,_PATH__:8th axis speed ctrl mode,
SPP8__PATH__,F__ADDR__522.7,_PATH__:8th axis sp index signal,
   #endif
#endif

#if otmc_support__PATH__ == 1 && otmc_support_P01 > -1 && operatorspanel == 2
MCEXE__PATH__,F__ADDR__512.0,_PATH__:macro call exec. signal,
MCRQ__PATH__,F__ADDR__512.1,_PATH__:mode change req. signal
MD1R__PATH__,F__ADDR__513.0,_PATH__:mode notification 1,
MD2R__PATH__,F__ADDR__513.1,_PATH__:mode notification 2,
MD4R__PATH__,F__ADDR__513.2,_PATH__:mode notification 4,
DNCIR__PATH__,F__ADDR__513.5,_PATH__:DNC notification,
ZRNR__PATH__,F__ADDR__513.7,_PATH__:ZRN notification,
MCEX1__PATH__,F__ADDR__514.0,_PATH__:macro 1 in progress,
MCEX2__PATH__,F__ADDR__514.1,_PATH__:macro 2 in progress,
MCEX3__PATH__,F__ADDR__514.2,_PATH__:macro 3 in progress,
MCEX4__PATH__,F__ADDR__514.3,_PATH__:macro 4 in progress,
#endif

#if dcs_support == 1
RSV1__PATH__,F__ADDR__750.0,_PATH__:monitoring result 1st axis,
*MCFV1__PATH__,F__ADDR__752.0,_PATH__:MCC off signal 1st axis,
*BRK1__PATH__,F__ADDR__754.0,_PATH__:Safety Brake sig. 1st axis,
RZV1__PATH__,F__ADDR__759.0,_PATH__:zero mon. result 1st axis,
POSE1__PATH__,F__ADDR__766.0,_PATH__:pos. inf. effect 1st axis,
   #if axis_number__PATH__ > 1
RSV2__PATH__,F__ADDR__750.1,_PATH__:monitoring result 2nd axis,
*MCFV2__PATH__,F__ADDR__752.1,_PATH__:MCC off signal 2nd axis,
*BRK2__PATH__,F__ADDR__754.1,_PATH__:Safety Brake sig. 2nd axis,
RZV2__PATH__,F__ADDR__759.1,_PATH__:zero mon. result 2nd axis,
POSE2__PATH__,F__ADDR__766.1,_PATH__:pos. inf. effect 2nd axis,
   #endif
   #if axis_number__PATH__ > 2
RSV3__PATH__,F__ADDR__750.2,_PATH__:monitoring result 3rd axis,
*MCFV3__PATH__,F__ADDR__752.2,_PATH__:MCC off signal 3rd axis,
*BRK3__PATH__,F__ADDR__754.2,_PATH__:Safety Brake sig. 3rd axis,
RZV3__PATH__,F__ADDR__759.2,_PATH__:zero mon. result 3rd axis,
POSE3__PATH__,F__ADDR__766.2,_PATH__:pos. inf. effect 3rd axis,
   #endif
   #if axis_number__PATH__ > 3
RSV4__PATH__,F__ADDR__750.3,_PATH__:monitoring result 4th axis,
*MCFV4__PATH__,F__ADDR__752.3,_PATH__:MCC off signal 4th axis,
*BRK4__PATH__,F__ADDR__754.3,_PATH__:Safety Brake sig. 4th axis,
RZV4__PATH__,F__ADDR__759.3,_PATH__:zero mon. result 4th axis,
POSE4__PATH__,F__ADDR__766.3,_PATH__:pos. inf. effect 4th axis,
   #endif
   #if axis_number__PATH__ > 4
RSV5__PATH__,F__ADDR__750.4,_PATH__:monitoring result 5th axis,
*MCFV5__PATH__,F__ADDR__752.4,_PATH__:MCC off signal 5th axis,
*BRK5__PATH__,F__ADDR__754.4,_PATH__:Safety Brake sig. 5th axis,
RZV5__PATH__,F__ADDR__759.4,_PATH__:zero mon. result 5th axis,
POSE5__PATH__,F__ADDR__766.4,_PATH__:pos. inf. effect 5th axis,
   #endif
   #if axis_number__PATH__ > 5
RSV6__PATH__,F__ADDR__750.5,_PATH__:monitoring result 6th axis,
*MCFV6__PATH__,F__ADDR__752.5,_PATH__:MCC off signal 6th axis,
*BRK6__PATH__,F__ADDR__754.5,_PATH__:Safety Brake sig. 6th axis,
RZV6__PATH__,F__ADDR__759.5,_PATH__:zero mon. result 6th axis,
POSE6__PATH__,F__ADDR__766.5,_PATH__:pos. inf. effect 6th axis,
   #endif
   #if axis_number__PATH__ > 6
RSV7__PATH__,F__ADDR__750.6,_PATH__:monitoring result 7th axis,
*MCFV7__PATH__,F__ADDR__752.6,_PATH__:MCC off signal 7th axis,
*BRK7__PATH__,F__ADDR__754.6,_PATH__:Safety Brake sig. 7th axis,
RZV7__PATH__,F__ADDR__759.6,_PATH__:zero mon. result 7th axis,
POSE7__PATH__,F__ADDR__766.6,_PATH__:pos. inf. effect 7th axis,
   #endif
   #if axis_number__PATH__ > 7
RSV8__PATH__,F__ADDR__750.7,_PATH__:monitoring result 8th axis,
*MCFV8__PATH__,F__ADDR__752.7,_PATH__:MCC off signal 8th axis,
*BRK8__PATH__,F__ADDR__754.7,_PATH__:Safety Brake sig. 8th axis,
RZV8__PATH__,F__ADDR__759.7,_PATH__:zero mon. result 8th axis,
POSE8__PATH__,F__ADDR__766.7,_PATH__:pos. inf. effect 8th axis,
   #endif
   #if spindle_support__PATH__ == 1 && spindle_support_P01 > -1
RSP1__PATH__,F__ADDR__751.0,_PATH__:monit. result 1st spindle,
RSP2__PATH__,F__ADDR__751.1,_PATH__:monit. result 2nd spindle,
RSP3__PATH__,F__ADDR__751.2,_PATH__:monit. result 3rd spindle,
RSP4__PATH__,F__ADDR__751.3,_PATH__:monit. result 4th spindle,
RZP1__PATH__,F__ADDR__751.4,_PATH__:zero mon. result 1st spin.,
RZP2__PATH__,F__ADDR__751.5,_PATH__:zero mon. result 2nd spin.,
RZP3__PATH__,F__ADDR__751.6,_PATH__:zero mon. result 3rd spin.,
RZP4__PATH__,F__ADDR__751.7,_PATH__:zero mon. result 4th spin.,
*MCFP1__PATH__,F__ADDR__753.0,_PATH__:MCC off signal 1st spindle,
*MCFP2__PATH__,F__ADDR__753.1,_PATH__:MCC off signal 2nd spindle,
*MCFP3__PATH__,F__ADDR__753.2,_PATH__:MCC off signal 3rd spindle,
*MCFP4__PATH__,F__ADDR__753.3,_PATH__:MCC off signal 4th spindle,
   #endif
#endif

// ===========================================================================
// Output signal from the PMC to the CNC
// ===========================================================================
// -----------------------------------
// byte:
// -----------------------------------
*JV-15__PATH__,G__ADDR__010,_PATH__:manual feed ovr signal,
*FV0-7__PATH__,G__ADDR__012,_PATH__:feed override signal,
*HROV__PATH__,G__ADDR__096,_PATH__:1% step rapid traverse ovr,
#if spindle_support__PATH__ > 0 && spindle_support_P01 > -1
SOV__PATH__,G__ADDR__030,_PATH__:spindle speed ovr signal,
ROXL__PATH__,G__ADDR__032,_PATH__:sp motor speed command,
   #if spindle_orientation__PATH__ == 2   // Spindle orientation ext. stop position
SHA__PATH__,G__ADDR__078,_PATH__:SHA00-SHA11,
   #endif
#endif

// *FVXEA__PATH__,G__ADDR__151,feed override group A,
// *FVXEB__PATH__,G__ADDR__163,feed override group B,
// *FVXEC__PATH__,G__ADDR__175,feed override group C,
// *FVXED__PATH__,G__ADDR__187,feed override group D,

// -----------------------------------
// bool:
// -----------------------------------
#if m_code_support == 1 || m_code_support == 2
MFIN2__PATH__,G__ADDR__004.4,_PATH__:2nd m funct. compl. signal,
MFIN3__PATH__,G__ADDR__004.5,_PATH__:3rd m funct. compl. signal,
#endif
#if m_code_support == 2
MFIN4__PATH__,G__ADDR__004.6,_PATH__:4th m-funct. compl. signal,
MFIN5__PATH__,G__ADDR__004.7,_PATH__:5th m-funct. compl. signal,
#endif

MFIN__PATH__,G__ADDR__005.0,_PATH__:aux. funct. compl. signal,
#if t_code_support__PATH__ > 0 && t_code_support_P01 > -1
TFIN__PATH__,G__ADDR__005.3,_PATH__:tool function completion,
#endif
AFL__PATH__,G__ADDR__005.6,_PATH__:auxiliary function lock,
#if b_code_support__PATH__ > 0 && b_code_support_P01 > -1
BFIN__PATH__,G__ADDR__005.7,_PATH__:2nd aux compl. signal,
#endif
SRN__PATH__,G__ADDR__006.0,_PATH__:program restart signal,
OVC__PATH__,G__ADDR__006.4,_PATH__:override cancel signal,
ST__PATH__,G__ADDR__007.2,_PATH__:cycle start signal,
*FLWU__PATH__,G__ADDR__007.5,_PATH__:follow-up signal,
*IT__PATH__,G__ADDR__008.0,_PATH__:all axis interlock signal,
*CSL__PATH__,G__ADDR__008.1,_PATH__:cutting block start lock,
*BSL__PATH__,G__ADDR__008.3,_PATH__:block start lock signal,
*ESP__PATH__,G__ADDR__008.4,_PATH__:emergency stop signal,
*SP__PATH__,G__ADDR__008.5,_PATH__:feed hold signal,
RRW__PATH__,G__ADDR__008.6,_PATH__:reset and rewind signal,
ERS__PATH__,G__ADDR__008.7,_PATH__:external reset signal,

#if handwheel_support > 0
HS1A__PATH__,G__ADDR__018.0,_PATH__:handwheel sel. signal 1,
HS1B__PATH__,G__ADDR__018.1,_PATH__:handwheel sel. signal 2,
HS1C__PATH__,G__ADDR__018.2,_PATH__:handwheel sel. signal 3,
HS1D__PATH__,G__ADDR__018.3,_PATH__:handwheel sel. signal 4,
#endif
HCLP__PATH__,G__ADDR__023.3,_PATH__:pulse gen. max. feed sel.,

MP1__PATH__,G__ADDR__019.4,_PATH__:increment feed1,
MP2__PATH__,G__ADDR__019.5,_PATH__:increment feed2,
RT__PATH__,G__ADDR__019.7,_PATH__:rapid traverse select.,
MD1__PATH__,G__ADDR__043.0,_PATH__:mode selection signal 1,
MD2__PATH__,G__ADDR__043.1,_PATH__:mode selection signal 2,
MD4__PATH__,G__ADDR__043.2,_PATH__:mode selection signal 4,
DNCI__PATH__,G__ADDR__043.5,_PATH__:dnc selection signal,
ZRN__PATH__,G__ADDR__043.7,_PATH__:ref. pos. select sign.,
BDT1__PATH__,G__ADDR__044.0,_PATH__:skip block (bdt1),
MLK__PATH__,G__ADDR__044.1,_PATH__:all axis machine lock,
BDT2__PATH__,G__ADDR__045.0,_PATH__:skip block signal (bdt2),
SBK__PATH__,G__ADDR__046.1,_PATH__:single block signal,
DRN__PATH__,G__ADDR__046.7,_PATH__:dry run signal,
UI000__PATH__,G__ADDR__054.0,_PATH__:custom macro #1000,
IGNVRY__PATH__,G__ADDR__066.0,_PATH__:ignore servo ready,

// ------------------------------------
// spindle specific signals
// ------------------------------------
#if spindle_support__PATH__ > 0 && spindle_support_P01 > -1
SFIN__PATH__,G__ADDR__005.2,_PATH__:sp function compl. signal,
SAR__PATH__,G__ADDR__029.4,_PATH__:spindle speed arrival,
*SSTP__PATH__,G__ADDR__029.6,_PATH__:spindle stop signal,
SIND__PATH__,G__ADDR__033.7,_PATH__:spindle mode select signal,
#endif
#if (spindle_support__PATH__ == 1 || spindle_support__PATH__ == 5) && spindle_support_P01 > -1
   #if rigid_tapping__PATH__ == 1
RGTAP__PATH__,G__ADDR__061.0,_PATH__:rigid tapping signal,
   #endif
#endif
#if spindle_support__PATH__ == 1 && spindle_support_P01 > -1
SRVA__PATH__,G__ADDR__070.4,_PATH__:ccw command signal,
SFRA__PATH__,G__ADDR__070.5,_PATH__:cw command signal,
MRDYA__PATH__,G__ADDR__070.7,_PATH__:machine ready signal,
ARSTA__PATH__,G__ADDR__071.0,_PATH__:alarm reset signal,
*ESPA__PATH__,G__ADDR__071.1,_PATH__:emergency stop spindle,
   #if spindle_orientation__PATH__ > 0
ORCMA__PATH__,G__ADDR__070.6,_PATH__:orientation command signal,
INDXA__PATH__,G__ADDR__072.0,_PATH__:orient stop pos. change,
   #endif
SOGNA__PATH__,G__ADDR__071.4,_PATH__:soft start/stop signal,
   #if cs_contour_ctrl__PATH__ == 1
CON__PATH__,G__ADDR__027.7,_PATH__:Cs contour ctrl on,
   #endif
#endif
#if spindle_support__PATH__ == 2 && spindle_support_P01 > -1
SGN1__PATH__,G__ADDR__033.5,_PATH__:polarity spec. signal,
SSIN1__PATH__,G__ADDR__033.6,_PATH__:sp. polarity select signal,
#endif

// ------------------------------------
// axes specific signals
// ------------------------------------
J1+__PATH__,G__ADDR__100.0,_PATH__:feed 1st axis + direction,
J1-__PATH__,G__ADDR__102.0,_PATH__:feed 1st axis -direction,
*+L1__PATH__,G__ADDR__114.0,_PATH__:overtravel + 1st axis,
*-L1__PATH__,G__ADDR__116.0,_PATH__:overtravel - 1st axis,
*+ED1__PATH__,G__ADDR__118.0,_PATH__:external dec. + 1st axis,
*-ED1__PATH__,G__ADDR__120.0,_PATH__:external dec. - 1st axis,
SVF1__PATH__,G__ADDR__126.0,_PATH__:servo off 1st axis,
*IT1__PATH__,G__ADDR__130.0,_PATH__:interlock 1st axis,
*DEC1__PATH__,G__ADDR__196.0,_PATH__:dec. signal 1st axis,
WPRST1__PATH__,G__ADDR__358.0,_PATH__:wp coord preset 1st axis,

#if axis_number__PATH__ > 1
J2+__PATH__,G__ADDR__100.1,_PATH__:feed 2nd axis + direction,
J2-__PATH__,G__ADDR__102.1,_PATH__:feed 2nd axis - direction,
*+L2__PATH__,G__ADDR__114.1,_PATH__:overtravel + 2nd axis,
*-L2__PATH__,G__ADDR__116.1,_PATH__:overtravel - 2nd axis,
*+ED2__PATH__,G__ADDR__118.1,_PATH__:external dec. + 2st axis,
*-ED2__PATH__,G__ADDR__120.1,_PATH__:external dec. - 2st axis,
SVF2__PATH__,G__ADDR__126.1,_PATH__:servo off 2nd axis,
*IT2__PATH__,G__ADDR__130.1,_PATH__:interlock 2nd axis,
*DEC2__PATH__,G__ADDR__196.1,_PATH__:dec. signal 2nd axis,
WPRST2__PATH__,G__ADDR__358.1,_PATH__:wp coord preset 2nd axis,
#endif

#if axis_number__PATH__ > 2
J3+__PATH__,G__ADDR__100.2,_PATH__:feed 3rd axis + direction,
J3-__PATH__,G__ADDR__102.2,_PATH__:feed 3rd axis - direction,
*+L3__PATH__,G__ADDR__114.2,_PATH__:overtravel + 3rd axis,
*-L3__PATH__,G__ADDR__116.2,_PATH__:overtravel - 3rd axis,
*+ED3__PATH__,G__ADDR__118.2,_PATH__:external dec. + 3rd axis,
*-ED3__PATH__,G__ADDR__120.2,_PATH__:external dec. - 3rd axis,
SVF3__PATH__,G__ADDR__126.2,_PATH__:servo off 3rd axis,
*IT3__PATH__,G__ADDR__130.2,_PATH__:interlock 3rd axis,
*DEC3__PATH__,G__ADDR__196.2,_PATH__:dec. signal 3rd axis,
WPRST3__PATH__,G__ADDR__358.2,_PATH__:wp coord preset 3rd axis,
#endif

#if axis_number__PATH__ > 3
J4+__PATH__,G__ADDR__100.3,_PATH__:feed 4th axis + direction,
J4-__PATH__,G__ADDR__102.3,_PATH__:feed 4th axis - direction,
*+L4__PATH__,G__ADDR__114.3,_PATH__:overtravel + 4th axis,
*-L4__PATH__,G__ADDR__116.3,_PATH__:overtravel - 4th axis,
*+ED4__PATH__,G__ADDR__118.3,_PATH__:external dec. + 4st axis,
*-ED4__PATH__,G__ADDR__120.3,_PATH__:external dec. - 4st axis,
SVF4__PATH__,G__ADDR__126.3,_PATH__:servo off 4th axis,
*IT4__PATH__,G__ADDR__130.3,_PATH__:interlock 4th axis,
*DEC4__PATH__,G__ADDR__196.3,_PATH__:dec. signal 4th axis,
WPRST4__PATH__,G__ADDR__358.3,_PATH__:wp coord preset 4th axis,
#endif

#if axis_number__PATH__ > 4
J5+__PATH__,G__ADDR__100.4,_PATH__:feed 5th axis + direction,
J5-__PATH__,G__ADDR__102.4,_PATH__:feed 5th axis - direction,
*+L5__PATH__,G__ADDR__114.4,_PATH__:overtravel + 5th axis,
*-L5__PATH__,G__ADDR__116.4,_PATH__:overtravel - 5th axis,
*+ED5__PATH__,G__ADDR__118.4,_PATH__:external dec. + 5st axis,
*-ED5__PATH__,G__ADDR__120.4,_PATH__:external dec. - 5st axis,
SVF5__PATH__,G__ADDR__126.4,_PATH__:servo off 5th axis,
*IT5__PATH__,G__ADDR__130.4,_PATH__:interlock 5th axis,
*DEC5__PATH__,G__ADDR__196.4,_PATH__:dec. signal 5th axis,
WPRST5__PATH__,G__ADDR__358.4,_PATH__:wp coord preset 5th axis,
#endif

#if axis_number__PATH__ > 5
J6+__PATH__,G__ADDR__100.5,_PATH__:feed 6th axis + direction,
J6-__PATH__,G__ADDR__102.5,_PATH__:feed 6th axis - direction,
*+L6__PATH__,G__ADDR__114.5,_PATH__:overtravel + 6th axis,
*-L6__PATH__,G__ADDR__116.5,_PATH__:overtravel - 6th axis,
*+ED6__PATH__,G__ADDR__118.5,_PATH__:external dec. + 6st axis,
*-ED6__PATH__,G__ADDR__120.5,_PATH__:external dec. - 6st axis,
SVF6__PATH__,G__ADDR__126.5,_PATH__:servo off 6th axis,
*IT6__PATH__,G__ADDR__130.5,_PATH__:interlock 6th axis,
*DEC6__PATH__,G__ADDR__196.5,_PATH__:dec. signal 6th axis,
WPRST6__PATH__,G__ADDR__358.5,_PATH__:wp coord preset 6th axis,
#endif

#if axis_number__PATH__ > 6
J7+__PATH__,G__ADDR__100.6,_PATH__:feed 7th axis + direction,
J7-__PATH__,G__ADDR__102.6,_PATH__:feed 7th axis - direction,
*+L7__PATH__,G__ADDR__114.6,_PATH__:overtravel + 7th axis,
*-L7__PATH__,G__ADDR__116.6,_PATH__:overtravel - 7th axis,
*+ED7__PATH__,G__ADDR__118.6,_PATH__:external dec. + 7st axis,
*-ED7__PATH__,G__ADDR__120.6,_PATH__:external dec. - 7st axis,
SVF7__PATH__,G__ADDR__126.6,_PATH__:servo off 7th axis,
*IT7__PATH__,G__ADDR__130.6,_PATH__:interlock 7th axis,
*DEC7__PATH__,G__ADDR__196.6,_PATH__:dec. signal 7th axis,
WPRST7__PATH__,G__ADDR__358.6,_PATH__:wp coord preset 7th axis,
#endif

#if axis_number__PATH__ > 7
J8+__PATH__,G__ADDR__100.7,_PATH__:feed 8th axis + direction,
J8-__PATH__,G__ADDR__102.7,_PATH__:feed 8th axis - direction,
*+L8__PATH__,G__ADDR__114.7,_PATH__:overtravel + 8th axis,
*-L8__PATH__,G__ADDR__116.7,_PATH__:overtravel - 8th axis,
*+ED8__PATH__,G__ADDR__118.7,_PATH__:external dec. + 8st axis,
*-ED8__PATH__,G__ADDR__120.7,_PATH__:external dec. - 8st axis,
SVF8__PATH__,G__ADDR__126.7,_PATH__:servo off 8th axis,
*IT8__PATH__,G__ADDR__130.7,_PATH__:interlock 8th axis,
*DEC8__PATH__,G__ADDR__196.7,_PATH__:dec. signal 8th axis,
WPRST8__PATH__,G__ADDR__358.7,_PATH__:wp coord preset 8th axis,
#endif

#if spindle_support__PATH__ == 4 && spindle_support_P01 > -1
   #if spindle_sv_axis__PATH__ == 1
EAX1__PATH__,G__ADDR__136.0,_PATH__:1st axis is pmc axis,
   #endif
   #if spindle_sv_axis__PATH__ == 2
EAX2__PATH__,G__ADDR__136.1,_PATH__:2nd axis is pmc axis,
   #endif
   #if spindle_sv_axis__PATH__ == 3
EAX3__PATH__,G__ADDR__136.2,_PATH__:3rd axis is pmc axis,
   #endif
   #if spindle_sv_axis__PATH__ == 4
EAX4__PATH__,G__ADDR__136.3,_PATH__:4th axis is pmc axis,
   #endif
   #if spindle_sv_axis__PATH__ == 5
EAX5__PATH__,G__ADDR__136.4,_PATH__:5th axis is pmc axis,
   #endif
   #if spindle_sv_axis__PATH__ == 6
EAX6__PATH__,G__ADDR__136.5,_PATH__:6th axis is pmc axis,
   #endif
   #if spindle_sv_axis__PATH__ == 7
EAX7__PATH__,G__ADDR__136.6,_PATH__:7th axis is pmc axis,
   #endif
   #if spindle_sv_axis__PATH__ == 8
EAX8__PATH__,G__ADDR__136.7,_PATH__:8th axis is pmc axis,
   #endif

   #if __ADDR__ < 10
ESOFA__PATH__,G__ADDR__142.4,_PATH__:servo off pmc axis group A,
OVCEA__PATH__,G__ADDR__150.5,_PATH__:override cancel group A,
   #endif
   #if __ADDR__ == 10
ESOFB__PATH__,G5154.4,_PATH__:servo off signal group B,
OVCEB__PATH__,G5162.5,_PATH__:override cancel group B,
   #endif
   #if __ADDR__ == 11
ESOFB__PATH__,G6154.4,_PATH__:servo off signal group B,
OVCEB__PATH__,G6162.5,_PATH__:override cancel group B,
   #endif
   #if __ADDR__ == 12
ESOFB__PATH__,G7154.4,_PATH__:servo off signal group B,
OVCEB__PATH__,G7162.5,_PATH__:override cancel group B,
   #endif
   #if __ADDR__ == 13
ESOFB__PATH__,G8154.4,_PATH__:servo off signal group B,
OVCEB__PATH__,G8162.5,_PATH__:override cancel group B,
   #endif
   #if __ADDR__ == 14
ESOFB__PATH__,G9154.4,_PATH__:servo off signal group B,
OVCEB__PATH__,G9162.5,_PATH__:override cancel group B,
   #endif
#endif

#if spindle_support__PATH__ == 5 && spindle_support_P01 > -1
   #if spindle_sv_axis__PATH__ == 1
SRVON1__PATH__,G__ADDR__521.0,_PATH__:1st axis speed ctrl mode,
SVRVS1__PATH__,G__ADDR__523.0,_PATH__:1st axis SV reverse signal,
   #endif
   #if spindle_sv_axis__PATH__ == 2
SRVON2__PATH__,G__ADDR__521.1,_PATH__:2nd axis speed ctrl mode,
SVRVS2__PATH__,G__ADDR__523.1,_PATH__:2nd axis SV reverse signal,
   #endif
   #if spindle_sv_axis__PATH__ == 3
SRVON3__PATH__,G__ADDR__521.2,_PATH__:3rd axis speed ctrl mode,
SVRVS3__PATH__,G__ADDR__523.2,_PATH__:3rd axis SV reverse signal,
   #endif
   #if spindle_sv_axis__PATH__ == 4
SRVON4__PATH__,G__ADDR__521.3,_PATH__:4th axis speed ctrl mode,
SVRVS4__PATH__,G__ADDR__523.3,_PATH__:4th axis SV reverse signal,
   #endif
   #if spindle_sv_axis__PATH__ == 5
SRVON5__PATH__,G__ADDR__521.4,_PATH__:5th axis speed ctrl mode,
SVRVS5__PATH__,G__ADDR__523.4,_PATH__:5th axis SV reverse signal,
   #endif
   #if spindle_sv_axis__PATH__ == 6
SRVON6__PATH__,G__ADDR__521.5,_PATH__:6th axis speed ctrl mode,
SVRVS6__PATH__,G__ADDR__523.5,_PATH__:6th axis SV reverse signal,
   #endif
   #if spindle_sv_axis__PATH__ == 7
SRVON7__PATH__,G__ADDR__521.6,_PATH__:7th axis speed ctrl mode,
SVRVS7__PATH__,G__ADDR__523.6,_PATH__:7th axis SV reverse signal,
   #endif
   #if spindle_sv_axis__PATH__ == 8
SRVON8__PATH__,G__ADDR__521.7,_PATH__:8th axis speed ctrl mode,
SVRVS8__PATH__,G__ADDR__523.7,_PATH__:8th axis SV reverse signal,
   #endif
#endif

#if otmc_support__PATH__ == 1 && otmc_support_P01 > -1 && operatorspanel == 2
MCST1__PATH__,G__ADDR__512.0,_PATH__:macro call 1 start,
MCST2__PATH__,G__ADDR__512.1,_PATH__:macro call 2 start,
MCST3__PATH__,G__ADDR__512.2,_PATH__:macro call 3 start,
MCST4__PATH__,G__ADDR__512.3,_PATH__:macro call 4 start,
MCFIN__PATH__,G__ADDR__514.0,_PATH__:mode change completion,
#endif

#if dcs_support == 1
*VLDV1__PATH__,G__ADDR__750.0,_PATH__:safety check req. 1st ax.,
SVA1__PATH__,G__ADDR__752.0,_PATH__:saf. sel. sig. A 1st axis,
SVB1__PATH__,G__ADDR__753.0,_PATH__:saf. sel. sig. B 1st axis,
SVZR1__PATH__,G__ADDR__755.0,_PATH__:zero mon. req. 1st axis,
   #if axis_number__PATH__ > 1
*VLDV2__PATH__,G__ADDR__750.1,_PATH__:safety check req. 2nd ax.,
SVA2__PATH__,G__ADDR__752.1,_PATH__:saf. sel. sig. A 2nd axis,
SVB2__PATH__,G__ADDR__753.1,_PATH__:saf. sel. sig. B 2nd axis,
SVZR2__PATH__,G__ADDR__755.1,_PATH__:zero mon. req. 2nd axis,
   #endif
   #if axis_number__PATH__ > 2
*VLDV3__PATH__,G__ADDR__750.2,_PATH__:safety check req. 3rd ax.,
SVA3__PATH__,G__ADDR__752.2,_PATH__:saf. sel. sig. A 3rd axis,
SVB3__PATH__,G__ADDR__753.2,_PATH__:saf. sel. sig. B 3rd axis,
SVZR3__PATH__,G__ADDR__755.2,_PATH__:zero mon. req. 3rd axis,
   #endif
   #if axis_number__PATH__ > 3
*VLDV4__PATH__,G__ADDR__750.3,_PATH__:safety check req. 4th ax.,
SVA4__PATH__,G__ADDR__752.3,_PATH__:saf. sel. sig. A 4th axis,
SVB4__PATH__,G__ADDR__753.3,_PATH__:saf. sel. sig. B 4th axis,
SVZR4__PATH__,G__ADDR__755.3,_PATH__:zero mon. req. 4th axis,
   #endif
   #if axis_number__PATH__ > 4
*VLDV5__PATH__,G__ADDR__750.4,_PATH__:safety check req. 5th ax.,
SVA5__PATH__,G__ADDR__752.4,_PATH__:saf. sel. sig. A 5th axis,
SVB5__PATH__,G__ADDR__753.4,_PATH__:saf. sel. sig. B 5th axis,
SVZR5__PATH__,G__ADDR__755.4,_PATH__:zero mon. req. 5th axis,
   #endif
   #if axis_number__PATH__ > 5
*VLDV6__PATH__,G__ADDR__750.5,_PATH__:safety check req. 6th ax.,
SVA6__PATH__,G__ADDR__752.5,_PATH__:saf. sel. sig. A 6th axis,
SVB6__PATH__,G__ADDR__753.5,_PATH__:saf. sel. sig. B 6th axis,
SVZR6__PATH__,G__ADDR__755.5,_PATH__:zero mon. req. 6th axis,
   #endif
   #if axis_number__PATH__ > 6
*VLDV7__PATH__,G__ADDR__750.6,_PATH__:safety check req. 7th ax.,
SVA7__PATH__,G__ADDR__752.6,_PATH__:saf. sel. sig. A 7th axis,
SVB7__PATH__,G__ADDR__753.6,_PATH__:saf. sel. sig. B 7th axis,
SVZR7__PATH__,G__ADDR__755.6,_PATH__:zero mon. req. 7th axis,
   #endif
   #if axis_number__PATH__ > 7
*VLDV8__PATH__,G__ADDR__750.7,_PATH__:safety check req. 8th ax.,
SVA8__PATH__,G__ADDR__752.7,_PATH__:saf. sel. sig. A 8th axis,
SVB8__PATH__,G__ADDR__753.7,_PATH__:saf. sel. sig. B 6th axis,
SVZR8__PATH__,G__ADDR__755.7,_PATH__:zero mon. req. 8th axis,
   #endif
   #if (spindle_support__PATH__ == 1 || spindle_support__PATH__ == 5) && spindle_support_P01 > -1
*VLDP1__PATH__,G__ADDR__751.0,_PATH__:saf. check req. 1st spin.,
*VLDP2__PATH__,G__ADDR__751.1,_PATH__:saf. check req. 2nd spin.,
*VLDP3__PATH__,G__ADDR__751.2,_PATH__:saf. check req. 3rd spin.,
*VLDP4__PATH__,G__ADDR__751.3,_PATH__:saf. check req. 4th spin.,
SPZR1__PATH__,G__ADDR__751.4,_PATH__:zero mon. req. 1st spin.,
SPZR2__PATH__,G__ADDR__751.5,_PATH__:zero mon. req. 2nd spin.,
SPZR3__PATH__,G__ADDR__751.6,_PATH__:zero mon. req. 3rd spin.,
SPZR4__PATH__,G__ADDR__751.7,_PATH__:zero mon. req. 4th spin.,
SPA1__PATH__,G__ADDR__754.0,_PATH__:saf. sel. A 1st spindle,
SPA2__PATH__,G__ADDR__754.1,_PATH__:saf. sel. A 2nd spindle,
SPA3__PATH__,G__ADDR__754.2,_PATH__:saf. sel. A 3rd spindle,
SPA4__PATH__,G__ADDR__754.3,_PATH__:saf. sel. A 4th spindle,
SPB1__PATH__,G__ADDR__754.4,_PATH__:saf. sel. B 1st spindle,
SPB2__PATH__,G__ADDR__754.5,_PATH__:saf. sel. B 2nd spindle,
SPB3__PATH__,G__ADDR__754.6,_PATH__:saf. sel. B 3rd spindle,
SPB4__PATH__,G__ADDR__754.7,_PATH__:saf. sel. B 4th spindle,
   #endif
#endif
